)]}'
{"version":3,"file":"/packages/cwaring:modernizr.js","sources":["cwaring:modernizr/modernizr-dev.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kD;AACA,umB;AACA,G;AACA,wC;;AAEA,mB;;;AAGA,uC;AACA,yC;AACA,Y;;AAEA,K;AACA,yF;AACA,I;AACA,gC;AACA,uB;AACA,kB;AACA,0B;;AAEA,yB;AACA,qC;;AAEA,wC;AACA,sF;;AAEA,gD;AACA,kI;;AAEA,mE;AACA,4B;;AAEA,0F;AACA,+B;;AAEA,+C;AACA,oB;;AAEA,wC;AACA,yB;;AAEA,+D;AACA,gC;;AAEA,iB;AACA,W;AACA,8C;AACA,sC;AACA,6G;AACA,gD;;AAEA,6E;AACA,wD;AACA,0C;AACA,yD;AACA,oB;AACA,qD;AACA,kE;AACA,sD;AACA,c;AACA,e;AACA,kB;AACA,uE;AACA,mC;AACA,uC;AACA,O;;AAEA,S;;AAEA,kF;;AAEA,O;AACA,iF;AACA,e;AACA,oD;AACA,4C;AACA,+C;AACA,O;AACA,oD;AACA,+C;AACA,kG;;AAEA,sD;AACA,iE;AACA,K;;AAEA,O;AACA,yD;AACA,e;AACA,8D;AACA,O;AACA,4B;AACA,oC;AACA,0E;AACA,K;;AAEA,S;AACA,wD;AACA,e;AACA,oD;AACA,2C;AACA,O;AACA,4C;AACA,qD;AACA,kB;AACA,oB;AACA,oB;AACA,2C;AACA,sC;AACA,O;AACA,kB;AACA,K;;AAEA,O;AACA,mE;AACA,sB;AACA,mD;AACA,4D;AACA,4C;AACA,O;AACA,0D;AACA,2B;AACA,mC;AACA,O;AACA,kC;AACA,uD;AACA,O;AACA,kB;AACA,+C;AACA,O;AACA,e;;AAEA,iC;AACA,kD;AACA,6C;AACA,gF;AACA,c;AACA,2C;AACA,O;;AAEA,kE;AACA,iF;AACA,+C;AACA,6E;AACA,6D;AACA,8E;AACA,oC;AACA,iH;AACA,K;;AAEA,O;AACA,+D;AACA,sB;AACA,4D;AACA,qD;AACA,O;AACA,yD;AACA,2B;AACA,mC;AACA,O;AACA,kC;AACA,wD;AACA,O;AACA,mD;AACA,wC;AACA,gB;AACA,gC;AACA,2B;AACA,oB;AACA,wC;AACA,O;AACA,mB;AACA,K;;AAEA,O;AACA,sF;AACA,e;AACA,qE;AACA,4C;AACA,O;AACA,+C;AACA,wB;AACA,0B;AACA,wD;AACA,iE;AACA,wC;AACA,O;;;AAGA,wD;AACA,oB;AACA,iC;AACA,6C;AACA,S;AACA,4D;AACA,Q;;AAEA,mF;AACA,kD;AACA,4B;AACA,6C;AACA,wE;AACA,sC;AACA,8C;AACA,2C;AACA,c;AACA,qB;AACA,0B;AACA,K;;AAEA,kF;;AAEA,O;AACA,gC;AACA,sB;AACA,4D;AACA,+C;AACA,O;AACA,0C;AACA,2B;AACA,mC;AACA,O;AACA,+C;;AAEA,kE;AACA,oD;AACA,4D;AACA,yG;AACA,kD;AACA,8C;AACA,wC;AACA,kC;AACA,U;AACA,O;AACA,qC;AACA,yC;AACA,O;AACA,2B;AACA,K;;AAEA,kF;;AAEA,O;AACA,4E;AACA,mD;AACA,mB;AACA,e;AACA,M;AACA,8D;AACA,sF;AACA,O;AACA,iB;;AAEA,S;AACA,kF;AACA,wB;AACA,2B;AACA,S;AACA,gO;;AAEA,S;AACA,qC;AACA,S;AACA,yB;;AAEA,S;AACA,0E;AACA,wB;AACA,sB;AACA,S;AACA,6C;;AAEA,S;AACA,+E;AACA,wB;AACA,sB;AACA,S;AACA,yD;;AAEA,S;AACA,4F;AACA,uC;AACA,wB;AACA,sB;AACA,S;AACA,qD;;AAEA,S;AACA,wF;AACA,wB;AACA,qB;AACA,S;AACA,wB;;AAEA,6E;AACA,mC;;AAEA,gC;AACA,mC;;AAEA,yC;AACA,oD;AACA,M;;AAEA,kF;;AAEA,mB;AACA,yB;;AAEA,wB;AACA,2B;;AAEA,qB;;;;AAIA,iB;;;AAGA,wB;AACA,iC;AACA,0B;;AAEA,uD;AACA,uC;AACA,c;AACA,uB;AACA,2B;AACA,wB;AACA,M;;AAEA,qB;AACA,W;;AAEA,8C;AACA,8B;AACA,+D;AACA,6B;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,+C;AACA,6B;AACA,uB;AACA,Y;AACA,M;;AAEA,4C;AACA,6D;AACA,M;;AAEA,iC;AACA,yC;AACA,K;AACA,I;;;;AAIA,+B;AACA,qC;AACA,gC;AACA,+B;AACA,uC;;AAEA,kD;AACA,+B;AACA,mD;AACA,8B;;;AAGA,G;AACA,C;AACA,8B;AACA,iC;AACA,4B;AACA,iC;AACA,a;AACA,gC;AACA,oF;AACA,K;AACA,6B;AACA,C;AACA,G;AACA,M;AACA,yG;;AAEA,mJ;AACA,E;;AAEA,sE;;AAEA,G;AACA,C;AACA,4B;AACA,4B;AACA,2B;AACA,oB;AACA,a;AACA,gC;AACA,+E;AACA,K;AACA,gB;AACA,0B;AACA,e;AACA,sB;AACA,8B;AACA,8B;AACA,G;AACA,C;AACA,G;AACA,M;AACA,gG;AACA,E;;AAEA,gE;AACA,+C;AACA,I;AACA,qE;AACA,wE;AACA,wD;AACA,I;AACA,oE;AACA,qE;;AAEA,+D;;AAEA,G;AACA,C;AACA,wB;AACA,wB;AACA,uB;AACA,sB;AACA,gD;AACA,a;AACA,uB;AACA,6E;AACA,M;AACA,gC;AACA,6E;AACA,K;AACA,+C;AACA,C;AACA,G;AACA,M;AACA,iF;AACA,E;;AAEA,2C;AACA,iB;AACA,4F;AACA,gF;AACA,2D;AACA,iC;;AAEA,qF;AACA,wC;AACA,2C;AACA,8C;AACA,6C;AACA,sC;AACA,mB;AACA,K;;AAEA,+B;AACA,6D;AACA,K;;AAEA,G;AACA,C;AACA,0B;AACA,6B;AACA,iC;AACA,sB;AACA,kB;AACA,c;AACA,iB;AACA,gB;AACA,0B;AACA,c;AACA,sB;AACA,gB;AACA,uB;AACA,iB;AACA,G;AACA,C;AACA,G;;AAEA,8D;;AAEA,+D;AACA,iF;AACA,qD;;AAEA,+E;AACA,8B;AACA,8C;AACA,2D;;AAEA,kE;;AAEA,mE;AACA,wC;AACA,oD;;AAEA,gD;AACA,0B;AACA,S;AACA,qC;AACA,mC;AACA,kB;AACA,gB;AACA,mB;AACA,K;AACA,K;;AAEA,G;AACA,C;AACA,wB;AACA,4B;AACA,+B;AACA,a;AACA,uB;AACA,oE;AACA,K;AACA,gD;AACA,C;AACA,G;AACA,M;AACA,mF;AACA,E;;AAEA,4D;;AAEA,G;AACA,C;AACA,4B;AACA,+B;AACA,sB;AACA,mE;AACA,C;AACA,G;;AAEA,kE;;AAEA,mE;AACA,wC;AACA,oD;AACA,kD;AACA,0B;AACA,S;AACA,uC;AACA,qC;AACA,kB;AACA,gB;AACA,mB;AACA,K;AACA,K;;AAEA,G;AACA,C;AACA,gB;AACA,oB;AACA,mB;AACA,kB;AACA,gC;AACA,gB;AACA,a;AACA,c;AACA,e;AACA,Y;AACA,sB;AACA,U;AACA,c;AACA,c;AACA,G;AACA,C;AACA,G;AACA,M;AACA,4D;AACA,E;;AAEA,wI;;AAEA,G;AACA,C;AACA,6B;AACA,+B;AACA,2B;AACA,qB;AACA,C;AACA,G;;AAEA,6E;AACA,wB;AACA,gE;;AAEA,G;AACA,C;AACA,wB;AACA,2B;AACA,2B;AACA,qC;AACA,a;AACA,4B;AACA,2C;AACA,M;AACA,kC;AACA,oE;AACA,M;AACA,gC;AACA,8F;AACA,K;AACA,2C;AACA,C;AACA,G;AACA,M;AACA,8J;AACA,E;;AAEA,sD;;AAEA,G;AACA,C;AACA,+B;AACA,2B;AACA,0F;AACA,0B;AACA,oB;AACA,e;AACA,0G;AACA,I;AACA,a;AACA,qC;AACA,sE;AACA,K;AACA,gB;AACA,a;AACA,e;AACA,gC;AACA,kB;AACA,iB;AACA,yB;AACA,a;AACA,iB;AACA,G;AACA,C;AACA,G;;AAEA,2F;;;AAGA,iE;AACA,oG;;AAEA,kG;AACA,sC;;;;AAIA,K;AACA,4D;AACA,K;AACA,4B;AACA,+B;AACA,G;AACA,G;;AAEA,sE;AACA,yB;AACA,qB;AACA,gB;AACA,iB;AACA,e;AACA,gB;AACA,oB;AACA,yB;;AAEA,qC;AACA,wB;AACA,kC;AACA,iE;AACA,sE;AACA,iE;AACA,Q;AACA,iE;AACA,4D;AACA,gD;AACA,2B;AACA,sD;;AAEA,2F;AACA,oD;AACA,qF;AACA,+E;AACA,W;AACA,S;AACA,O;;AAEA,kE;AACA,sE;;;AAGA,sD;AACA,mE;AACA,4C;AACA,iF;AACA,+E;AACA,4E;AACA,U;AACA,+F;AACA,oC;AACA,kD;;AAEA,4C;AACA,kD;AACA,S;AACA,iD;AACA,kD;AACA,4B;AACA,uG;AACA,yF;AACA,W;;AAEA,uE;AACA,S;;AAEA,yE;AACA,O;AACA,K;AACA,G;;AAEA,G;;AAEA,4C;;;AAGA,+C;AACA,sC;AACA,kC;AACA,yC;AACA,0D;;AAEA,0E;AACA,c;AACA,qC;AACA,gE;AACA,iE;;AAEA,yC;AACA,4B;AACA,uE;AACA,uC;AACA,K;;AAEA,G;;AAEA,G;;AAEA,gE;AACA,iB;;AAEA,e;AACA,8C;AACA,wF;AACA,gD;AACA,sD;AACA,Q;AACA,K;AACA,U;AACA,mJ;AACA,iG;AACA,Q;AACA,K;AACA,O;;;;AAIA,mD;AACA,qD;AACA,+C;;AAEA,0C;AACA,yB;;AAEA,qD;AACA,+B;AACA,4C;AACA,uD;AACA,yB;AACA,yB;AACA,K;;AAEA,6C;AACA,2B;;AAEA,6D;AACA,yC;AACA,kB;AACA,6B;AACA,kD;AACA,Y;AACA,K;AACA,I;;AAEA,mD;AACA,yB;AACA,a;AACA,K;;AAEA,4B;;AAEA,kB;AACA,2B;AACA,gB;AACA,wC;AACA,oB;AACA,gB;AACA,O;AACA,S;;AAEA,gC;AACA,yB;AACA,I;;AAEA,K;AACA,8D;AACA,wD;AACA,gE;AACA,I;AACA,+C;AACA,gF;AACA,K;AACA,qC;AACA,uC;AACA,kC;AACA,2C;AACA,yC;AACA,S;AACA,O;AACA,Y;;AAEA,sC;AACA,gD;AACA,gD;;AAEA,iF;AACA,yC;AACA,yC;AACA,O;;AAEA,yC;AACA,6E;AACA,gD;AACA,gE;AACA,2E;AACA,kC;AACA,yB;AACA,O;;AAEA,uD;;AAEA,uD;AACA,yC;AACA,8C;AACA,O;AACA,8C;AACA,gD;AACA,0B;AACA,qG;AACA,uF;AACA,S;;AAEA,mE;AACA,O;;AAEA,8D;AACA,qE;;AAEA,0B;AACA,wC;AACA,K;;AAEA,wC;AACA,G;;AAEA,0C;AACA,+B;AACA,gC;AACA,qC;AACA,K;;;;AAIA,4D;AACA,iC;AACA,6B;AACA,mE;AACA,mC;AACA,yB;AACA,G;AACA,G;;AAEA,qE;AACA,oC;AACA,0C;AACA,oC;;AAEA,wE;AACA,wE;AACA,iD;;AAEA,8D;AACA,qC;;;AAGA,oG;AACA,4C;;;AAGA,kC;AACA,6D;AACA,I;;AAEA,G;AACA,C;AACA,mB;AACA,uB;AACA,sB;AACA,iC;AACA,kE;AACA,C;AACA,G;AACA,M;AACA,0D;AACA,E;;AAEA,6E;AACA,uD;AACA,oD;AACA,0C;AACA,uC;AACA,wD;AACA,K;;AAEA,G;AACA,C;AACA,wB;AACA,2B;AACA,2B;AACA,iC;AACA,6B;AACA,C;AACA,G;AACA,M;AACA,0D;AACA,E;;AAEA,+C;AACA,kD;AACA,kF;AACA,K;;AAEA,G;AACA,C;AACA,0B;AACA,6B;AACA,6B;AACA,kB;AACA,gG;AACA,a;AACA,qC;AACA,mE;AACA,K;AACA,6C;AACA,sE;AACA,K;AACA,6C;AACA,sE;AACA,K;AACA,gC;AACA,sD;AACA,I;AACA,C;AACA,G;;;AAGA,gD;;AAEA,mC;AACA,8E;AACA,wD;;AAEA,kE;AACA,uE;AACA,wC;AACA,0E;AACA,sC;AACA,K;;AAEA,oC;AACA,2B;AACA,wB;;AAEA,8C;AACA,iE;AACA,K;;AAEA,G;AACA,C;AACA,qC;AACA,gC;AACA,4B;AACA,iB;AACA,C;AACA,G;;AAEA,6E;AACA,4E;AACA,sF;;AAEA,+C;AACA,oC;AACA,2B;AACA,+E;;AAEA,iF;AACA,wE;AACA,uD;AACA,K;;AAEA,G;AACA,C;AACA,wB;AACA,2B;AACA,wB;AACA,kB;AACA,mF;AACA,C;AACA,G;;AAEA,qE;AACA,sE;AACA,qD;;AAEA,2C;AACA,oC;AACA,2B;AACA,kD;;AAEA,sD;AACA,+C;AACA,qE;AACA,0C;AACA,K;;AAEA,G;AACA,C;AACA,qB;AACA,2B;AACA,qB;AACA,kB;AACA,a;AACA,iC;AACA,yD;AACA,I;AACA,C;AACA,G;;AAEA,wC;AACA,oC;AACA,2B;AACA,4D;;AAEA,6D;AACA,K;;AAEA,G;AACA,C;AACA,wB;AACA,4B;AACA,yB;AACA,2K;AACA,a;AACA,uB;AACA,kE;AACA,K;AACA,+C;AACA,C;AACA,G;AACA,M;AACA,mD;AACA,E;;AAEA,+C;AACA,mC;AACA,6E;AACA,K;;AAEA,G;AACA,C;AACA,iC;AACA,sB;AACA,sC;AACA,C;AACA,G;AACA,M;AACA,yB;AACA,E;;AAEA,kE;AACA,+C;AACA,I;AACA,8E;AACA,sC;AACA,4C;AACA,I;AACA,uF;AACA,yD;;AAEA,mF;AACA,2D;AACA,mE;AACA,yC;AACA,sB;AACA,sC;AACA,qB;;AAEA,S;AACA,wC;AACA,sC;AACA,sF;AACA,sF;AACA,sF;;AAEA,8B;AACA,6F;AACA,kC;AACA,sF;AACA,oE;AACA,qF;AACA,O;AACA,kB;;AAEA,gB;AACA,K;;AAEA,G;AACA,C;AACA,wB;AACA,sB;AACA,qB;AACA,oB;AACA,gB;AACA,qH;AACA,I;AACA,gB;AACA,iB;AACA,qB;AACA,mB;AACA,c;AACA,qB;AACA,uB;AACA,G;AACA,C;AACA,G;AACA,M;AACA,4F;;AAEA,0F;;AAEA,a;AACA,+B;AACA,qC;AACA,G;AACA,E;;AAEA,uF;AACA,yD;;AAEA,mF;AACA,2D;AACA,mE;;AAEA,yC;AACA,sB;AACA,sC;AACA,qB;;AAEA,sF;AACA,S;AACA,wC;AACA,iC;AACA,qF;;AAEA,uG;AACA,2F;;AAEA,4F;;AAEA,mF;;AAEA,sG;AACA,O;AACA,gB;;AAEA,gB;AACA,K;;AAEA,G;AACA,C;AACA,uB;AACA,0B;AACA,yB;AACA,kB;AACA,a;AACA,wB;AACA,kD;AACA,K;AACA,sC;AACA,C;AACA,G;AACA,M;AACA,0D;AACA,E;;AAEA,6C;AACA,mC;AACA,6B;AACA,2F;AACA,K;;AAEA,G;AACA,C;AACA,kB;AACA,sB;AACA,qB;AACA,gC;AACA,4D;AACA,C;AACA,G;;AAEA,yC;AACA,yC;AACA,sC;AACA,6F;AACA,K;AACA,0C;AACA,K;;;AAGA,8E;AACA,wC;AACA,4C;AACA,I;AACA,sB;AACA,wE;AACA,8F;AACA,gD;;AAEA,mF;AACA,gF;AACA,gE;;AAEA,O;AACA,kG;AACA,gG;AACA,wB;AACA,O;AACA,0D;;AAEA,sB;AACA,yC;AACA,sD;AACA,kD;AACA,O;;AAEA,gF;AACA,gF;AACA,gD;AACA,mC;AACA,yC;;AAEA,oE;AACA,4C;AACA,sC;AACA,kE;AACA,qE;AACA,yC;AACA,S;AACA,gE;AACA,8C;AACA,iE;;AAEA,mD;AACA,oF;AACA,2C;AACA,W;AACA,6C;AACA,S;AACA,O;;AAEA,yB;AACA,K;AACA,iC;AACA,O;;;;AAIA,gG;AACA,6C;AACA,4D;;AAEA,G;AACA,C;AACA,6B;AACA,2B;AACA,0B;AACA,sB;AACA,a;AACA,gC;AACA,kF;AACA,K;AACA,gB;AACA,wB;AACA,yB;AACA,mB;AACA,a;AACA,c;AACA,G;AACA,C;AACA,G;AACA,M;AACA,6F;AACA,E;;AAEA,8C;AACA,mD;AACA,mB;AACA,K;;AAEA,gE;AACA,+B;AACA,8E;AACA,K;;;AAGA,K;AACA,kE;AACA,K;AACA,oC;AACA,yC;AACA,G;;AAEA,G;AACA,G;AACA,C;AACA,4B;AACA,2B;AACA,qB;AACA,kB;AACA,sH;AACA,C;AACA,G;;AAEA,wC;AACA,oC;AACA,2B;AACA,6D;AACA,8F;AACA,K;;;AAGA,yC;;;AAGA,qH;;;AAGA,kB;;;AAGA,mB;;AAEA,G;AACA,C;AACA,6B;AACA,2B;AACA,qB;AACA,oB;AACA,6B;AACA,gB;AACA,kB;AACA,e;AACA,U;AACA,gB;AACA,e;AACA,e;AACA,kB;AACA,wB;AACA,c;AACA,oB;AACA,qB;AACA,wB;AACA,sB;AACA,G;AACA,C;AACA,G;AACA,M;AACA,8F;;AAEA,a;AACA,0B;AACA,yB;AACA,6B;AACA,sC;AACA,0B;AACA,0B;AACA,2B;AACA,0B;AACA,2B;AACA,wB;AACA,yB;AACA,wB;AACA,yB;AACA,G;AACA,E;;AAEA,0E;AACA,uE;AACA,yE;AACA,yE;;AAEA,2E;AACA,8C;AACA,a;AACA,sB;AACA,oB;AACA,2B;;AAEA,qC;;AAEA,+D;AACA,uC;;AAEA,8D;AACA,gF;AACA,gG;AACA,mB;;AAEA,wC;AACA,yE;;AAEA,gG;;AAEA,4C;AACA,6C;;AAEA,6E;AACA,iD;AACA,6F;AACA,qE;AACA,uE;AACA,2C;;AAEA,4C;;AAEA,2D;AACA,qE;AACA,yD;;AAEA,uE;AACA,gC;;AAEA,2D;AACA,uE;AACA,gF;;AAEA,gB;AACA,kF;AACA,0C;AACA,S;AACA,O;;AAEA,kC;AACA,K;AACA,kB;AACA,iB;;;AAGA,iB;;;AAGA,+G;;AAEA,G;AACA,C;AACA,6B;AACA,sB;AACA,oB;AACA,6B;AACA,a;AACA,0B;AACA,wH;AACA,I;AACA,C;AACA,G;AACA,M;AACA,0G;;AAEA,a;AACA,4B;AACA,yB;AACA,oB;AACA,mB;AACA,mB;AACA,wB;AACA,uB;AACA,2B;AACA,wB;AACA,oB;AACA,G;AACA,E;;AAEA,+E;AACA,iF;AACA,uC;AACA,8C;;AAEA,0E;AACA,gF;AACA,qE;AACA,2C;AACA,yD;AACA,oD;AACA,K;AACA,oB;AACA,2D;AACA,2D;AACA,+E;AACA,K;AACA,iB;AACA,iB;;;AAGA,iC;;AAEA,G;AACA,C;AACA,2B;AACA,6B;AACA,kB;AACA,a;AACA,mB;AACA,+E;AACA,I;AACA,C;AACA,G;AACA,M;AACA,kE;;AAEA,0H;AACA,E;;AAEA,gD;AACA,wC;AACA,8G;AACA,K;;AAEA,G;AACA,C;AACA,+B;AACA,qB;AACA,wB;AACA,kB;AACA,a;AACA,6C;AACA,yC;AACA,I;AACA,C;AACA,G;;AAEA,uB;AACA,wC;AACA,wC;AACA,4G;AACA,K;;;AAGA,wF;AACA,gD;;;AAGA,sB;AACA,iF;AACA,6B;;AAEA,e;AACA,mD;AACA,mC;AACA,uB;AACA,K;;AAEA,gB;AACA,G;;AAEA,G;;AAEA,yD;AACA,wE;AACA,0B;AACA,c;AACA,Y;AACA,a;AACA,oB;AACA,mC;AACA,yB;;AAEA,gC;AACA,4E;AACA,kE;AACA,yB;AACA,oC;AACA,mE;AACA,8B;AACA,O;AACA,K;;AAEA,gG;AACA,iG;AACA,0G;AACA,gE;AACA,wG;AACA,uE;AACA,iB;AACA,+J;AACA,gI;AACA,iD;AACA,0B;AACA,sB;AACA,uD;AACA,iC;AACA,qG;AACA,qC;AACA,8C;AACA,2C;AACA,mC;AACA,K;;AAEA,8B;AACA,+F;AACA,sB;AACA,wC;AACA,8C;AACA,oE;AACA,8B;AACA,Y;AACA,sC;AACA,K;;AAEA,iB;;AAEA,G;;AAEA,G;;AAEA,uE;;AAEA,G;AACA,C;AACA,uB;AACA,yB;AACA,6C;AACA,kB;AACA,gB;AACA,6E;AACA,yE;AACA,I;AACA,a;AACA,2D;AACA,qD;AACA,K;AACA,+D;AACA,iH;AACA,K;AACA,mE;AACA,4G;AACA,K;AACA,mC;AACA,6E;AACA,K;AACA,qC;AACA,sE;AACA,I;AACA,C;AACA,G;;AAEA,+B;AACA,iC;AACA,kF;AACA,gD;AACA,qH;AACA,6D;AACA,yC;AACA,O;AACA,mB;AACA,yC;AACA,U;AACA,8F;AACA,wD;AACA,kD;AACA,yH;AACA,mF;AACA,0C;AACA,O;AACA,G;AACA,C;AACA,G;AACA,C;AACA,kC;AACA,iC;AACA,kB;AACA,iF;AACA,C;AACA,G;;AAEA,sH;AACA,kE;AACA,K;;;AAGA,iC;AACA,6B;AACA,uB;AACA,uC;AACA,M;AACA,G;;AAEA,G;;AAEA,K;AACA,uE;AACA,4D;AACA,K;AACA,6C;AACA,a;;AAEA,4B;AACA,8B;;AAEA,+C;AACA,4C;;AAEA,6B;;AAEA,gC;AACA,mC;AACA,yC;AACA,2C;AACA,S;;AAEA,sD;AACA,oB;AACA,O;AACA,K;AACA,iB;AACA,G;;AAEA,G;;AAEA,K;AACA,qE;AACA,K;AACA,iB;AACA,qC;AACA,I;;AAEA,0B;AACA,gC;AACA,wB;AACA,K;;;;AAIA,gB;AACA,8B;AACA,I;;AAEA,wC;AACA,6C;AACA,4B;AACA,mC;AACA,wB;AACA,K;;;;AAIA,4D;AACA,iC;AACA,6B;AACA,uD;AACA,oC;AACA,+B;AACA,G;AACA,G;;AAEA,qF;AACA,wD;AACA,0D;AACA,6C;AACA,yB;AACA,sF;AACA,sD;AACA,mD;AACA,mB;AACA,6D;AACA,sB;AACA,S;AACA,O;AACA,mB;AACA,K;AACA,gE;AACA,2C;AACA,4D;AACA,6B;AACA,mB;AACA,yE;AACA,O;AACA,iD;AACA,mI;AACA,yC;AACA,8C;AACA,6D;AACA,S;AACA,K;AACA,qB;AACA,G;AACA,G;;AAEA,oD;;AAEA,qE;AACA,6C;AACA,iE;AACA,6C;;AAEA,qE;AACA,oE;AACA,kB;;AAEA,gE;AACA,iE;AACA,sE;AACA,gE;AACA,uD;AACA,0C;;AAEA,+D;AACA,2E;;AAEA,8B;AACA,kC;AACA,iD;AACA,oC;AACA,sB;AACA,O;AACA,K;;AAEA,+B;AACA,mC;;AAEA,mD;AACA,mD;AACA,sD;AACA,0B;AACA,uB;AACA,kD;AACA,0C;AACA,K;;AAEA,+B;AACA,uB;AACA,2B;AACA,sB;AACA,4B;AACA,8B;AACA,O;AACA,K;;AAEA,wB;AACA,sB;AACA,kC;;AAEA,uE;;AAEA,wE;AACA,6E;AACA,4D;AACA,wD;;AAEA,8E;AACA,2E;AACA,e;AACA,uC;AACA,wB;;AAEA,2E;AACA,4E;AACA,4E;AACA,2B;AACA,6C;AACA,yB;AACA,mD;AACA,W;AACA,S;AACA,wE;AACA,4B;AACA,c;AACA,uB;AACA,iD;AACA,S;AACA,O;AACA,K;AACA,iB;AACA,iB;AACA,G;;AAEA,G;;AAEA,mF;AACA,4E;AACA,wC;AACA,yF;AACA,gD;AACA,8E;AACA,yD;AACA,I;;AAEA,G;AACA,C;AACA,2B;AACA,2B;AACA,8B;AACA,kB;AACA,yD;AACA,C;AACA,G;;AAEA,qE;;;AAGA,K;AACA,0E;AACA,8E;AACA,wE;AACA,uB;AACA,K;AACA,uE;;AAEA,8D;AACA,gF;;AAEA,0E;AACA,6D;AACA,8D;;AAEA,kF;AACA,Y;AACA,kF;AACA,iD;AACA,K;AACA,G;;AAEA,0E;AACA,8D;AACA,4E;AACA,wC;AACA,6C;;;;AAIA,iG;AACA,sD;;AAEA,6E;AACA,oG;;AAEA,wG;AACA,I;AACA,mC;AACA,iF;AACA,2E;AACA,8F;AACA,W;AACA,oF;;AAEA,wE;AACA,sC;AACA,kC;AACA,4B;AACA,K;AACA,e;AACA,uC;AACA,Y;AACA,oH;AACA,2C;AACA,K;AACA,I;;;AAGA,G;AACA,C;AACA,sB;AACA,0B;AACA,yB;AACA,sB;AACA,4B;AACA,C;AACA,G;AACA,M;AACA,uE;AACA,E;;AAEA,yE;AACA,oE;AACA,uF;AACA,kE;;AAEA,gD;AACA,8C;;AAEA,oB;AACA,iF;AACA,G;AACA,C;;AAEA,K;AACA,2E;AACA,8E;AACA,+E;AACA,6E;AACA,6E;AACA,6E;AACA,0E;AACA,I;AACA,qD;AACA,0D;AACA,6E;AACA,wE;AACA,4C;AACA,K;AACA,sD;AACA,0E;AACA,G;AACA,6C;;AAEA,G;AACA,C;AACA,0B;AACA,6B;AACA,6B;AACA,2B;AACA,kB;AACA,a;AACA,yC;AACA,gF;AACA,I;AACA,C;AACA,G;;AAEA,+E;;AAEA,G;AACA,C;AACA,yB;AACA,4B;AACA,4B;AACA,2B;AACA,2E;AACA,iB;AACA,C;AACA,G;;AAEA,iF;;AAEA,G;AACA,C;AACA,4B;AACA,+B;AACA,kB;AACA,6G;AACA,a;AACA,4B;AACA,8D;AACA,I;AACA,C;AACA,G;;AAEA,oF;;AAEA,G;AACA,C;AACA,uB;AACA,0B;AACA,6B;AACA,kB;AACA,gB;AACA,0C;AACA,6C;AACA,G;AACA,C;AACA,G;;AAEA,6E;;AAEA,G;AACA,C;AACA,2B;AACA,8B;AACA,6B;AACA,+C;AACA,kB;AACA,oG;AACA,a;AACA,qE;AACA,iC;AACA,I;AACA,C;AACA,G;AACA,M;AACA,wD;AACA,E;;AAEA,+E;;AAEA,G;AACA,C;AACA,wB;AACA,2B;AACA,2B;AACA,qC;AACA,iB;AACA,C;AACA,G;;;AAGA,e;;AAEA,sB;AACA,+C;AACA,uB;AACA,6C;AACA,W;AACA,8B;AACA,mC;AACA,S;AACA,kB;;AAEA,kB;AACA,O;;AAEA,4I;AACA,mB;;AAEA,4C;AACA,oC;AACA,+C;;AAEA,mF;AACA,qF;AACA,8C;AACA,O;;AAEA,oD;AACA,K;;;AAGA,O;;;AAGA,G;AACA,C;AACA,4B;AACA,+B;AACA,+B;AACA,iB;AACA,C;AACA,G;;AAEA,iF;;AAEA,G;AACA,C;AACA,2B;AACA,8B;AACA,4B;AACA,iB;AACA,C;AACA,G;;AAEA,kF;;AAEA,G;AACA,C;AACA,8B;AACA,gC;AACA,4B;AACA,kB;AACA,e;AACA,oI;AACA,G;AACA,C;AACA,G;;AAEA,mD;AACA,yD;AACA,kD;;AAEA,oF;AACA,kF;AACA,iF;AACA,sF;AACA,2E;;AAEA,kF;AACA,8D;AACA,qH;AACA,uC;AACA,sD;AACA,8F;;AAEA,uC;AACA,+D;AACA,S;AACA,K;;AAEA,e;AACA,K;;AAEA,G;AACA,C;AACA,4B;AACA,+B;AACA,+B;AACA,iB;AACA,C;AACA,G;;AAEA,+E;;AAEA,G;AACA,C;AACA,oB;AACA,wB;AACA,uB;AACA,kB;AACA,a;AACA,gC;AACA,kD;AACA,K;AACA,e;AACA,2H;AACA,G;AACA,C;AACA,G;AACA,M;AACA,gJ;AACA,E;;AAEA,uE;;AAEA,G;AACA,C;AACA,6B;AACA,8B;AACA,kB;AACA,0B;AACA,a;AACA,gC;AACA,iE;AACA,I;AACA,C;AACA,G;;AAEA,oF;;;AAGA,kB;AACA,e;;AAEA,0C;AACA,sB;;AAEA,gC;AACA,qC;;AAEA,4D;AACA,iD;AACA,sB;AACA,G;;AAEA,6B;AACA,+B;;;;AAIA,mB","sourcesContent":["/*! Modernizr 3.0.0-beta (Development Build) | MIT\n *  Build: http://modernizr.com/download/#-applicationcache-audio-backgroundsize-borderimage-borderradius-boxshadow-canvas-canvastext-cssanimations-csscolumns-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-draganddrop-flexbox-flexboxlegacy-fontface-generatedcontent-geolocation-hashchange-history-hsla-indexeddb-inlinesvg-input-inputtypes-localstorage-multiplebgs-opacity-postmessage-rgba-sessionstorage-smil-svg-svgclippaths-textshadow-video-webgl-websockets-websqldatabase-webworkers-addtest-cssclasses-domprefixes-hasevent-prefixed-prefixes-shiv-testallprops-testprop-teststyles-dontmin\n */\n;(function(window, document, undefined){\n\n  var classes = [];\n\n\n  // Take the html5 variable out of the\n  // html5shiv scope so we can return it.\n  var html5;\n\n  /**\n  * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n  */\n  ;(function(window, document) {\n  /*jshint evil:true */\n    /** version */\n    var version = '3.7.0';\n\n    /** Preset options */\n    var options = window.html5 || {};\n\n    /** Used to skip problem elements */\n    var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n    /** Not all elements can be cloned in IE **/\n    var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n    /** Detect whether the browser supports default html5 styles */\n    var supportsHtml5Styles;\n\n    /** Name of the expando, to work with multiple documents or to re-shiv one document */\n    var expando = '_html5shiv';\n\n    /** The id for the the documents expando */\n    var expanID = 0;\n\n    /** Cached data for each document */\n    var expandoData = {};\n\n    /** Detect whether the browser supports unknown elements */\n    var supportsUnknownElements;\n\n    (function() {\n      try {\n          var a = document.createElement('a');\n          a.innerHTML = '<xyz></xyz>';\n          //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n          supportsHtml5Styles = ('hidden' in a);\n\n          supportsUnknownElements = a.childNodes.length == 1 || (function() {\n            // assign a false positive if unable to shiv\n            (document.createElement)('a');\n            var frag = document.createDocumentFragment();\n            return (\n              typeof frag.cloneNode == 'undefined' ||\n              typeof frag.createDocumentFragment == 'undefined' ||\n              typeof frag.createElement == 'undefined'\n            );\n          }());\n      } catch(e) {\n        // assign a false positive if detection fails => unable to shiv\n        supportsHtml5Styles = true;\n        supportsUnknownElements = true;\n      }\n\n    }());\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a style sheet with the given CSS text and adds it to the document.\n     * @private\n     * @param {Document} ownerDocument The document.\n     * @param {String} cssText The CSS text.\n     * @returns {StyleSheet} The style element.\n     */\n    function addStyleSheet(ownerDocument, cssText) {\n      var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n      p.innerHTML = 'x<style>' + cssText + '</style>';\n      return parent.insertBefore(p.lastChild, parent.firstChild);\n    }\n\n    /**\n     * Returns the value of `html5.elements` as an array.\n     * @private\n     * @returns {Array} An array of shived element node names.\n     */\n    function getElements() {\n      var elements = html5.elements;\n      return typeof elements == 'string' ? elements.split(' ') : elements;\n    }\n\n      /**\n     * Returns the data associated to the given document\n     * @private\n     * @param {Document} ownerDocument The document.\n     * @returns {Object} An object of data.\n     */\n    function getExpandoData(ownerDocument) {\n      var data = expandoData[ownerDocument[expando]];\n      if (!data) {\n          data = {};\n          expanID++;\n          ownerDocument[expando] = expanID;\n          expandoData[expanID] = data;\n      }\n      return data;\n    }\n\n    /**\n     * returns a shived element for the given nodeName and document\n     * @memberOf html5\n     * @param {String} nodeName name of the element\n     * @param {Document} ownerDocument The context document.\n     * @returns {Object} The shived element.\n     */\n    function createElement(nodeName, ownerDocument, data){\n      if (!ownerDocument) {\n          ownerDocument = document;\n      }\n      if(supportsUnknownElements){\n          return ownerDocument.createElement(nodeName);\n      }\n      if (!data) {\n          data = getExpandoData(ownerDocument);\n      }\n      var node;\n\n      if (data.cache[nodeName]) {\n          node = data.cache[nodeName].cloneNode();\n      } else if (saveClones.test(nodeName)) {\n          node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n      } else {\n          node = data.createElem(nodeName);\n      }\n\n      // Avoid adding some elements to fragments in IE < 9 because\n      // * Attributes like `name` or `type` cannot be set/changed once an element\n      //   is inserted into a document/fragment\n      // * Link elements with `src` attributes that are inaccessible, as with\n      //   a 403 response, will cause the tab/window to crash\n      // * Script elements appended to fragments will execute when their `src`\n      //   or `text` property is set\n      return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n    }\n\n    /**\n     * returns a shived DocumentFragment for the given document\n     * @memberOf html5\n     * @param {Document} ownerDocument The context document.\n     * @returns {Object} The shived DocumentFragment.\n     */\n    function createDocumentFragment(ownerDocument, data){\n      if (!ownerDocument) {\n          ownerDocument = document;\n      }\n      if(supportsUnknownElements){\n          return ownerDocument.createDocumentFragment();\n      }\n      data = data || getExpandoData(ownerDocument);\n      var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n      for(;i<l;i++){\n          clone.createElement(elems[i]);\n      }\n      return clone;\n    }\n\n    /**\n     * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n     * @private\n     * @param {Document|DocumentFragment} ownerDocument The document.\n     * @param {Object} data of the document.\n     */\n    function shivMethods(ownerDocument, data) {\n      if (!data.cache) {\n          data.cache = {};\n          data.createElem = ownerDocument.createElement;\n          data.createFrag = ownerDocument.createDocumentFragment;\n          data.frag = data.createFrag();\n      }\n\n\n      ownerDocument.createElement = function(nodeName) {\n        //abort shiv\n        if (!html5.shivMethods) {\n            return data.createElem(nodeName);\n        }\n        return createElement(nodeName, ownerDocument, data);\n      };\n\n      ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n        'var n=f.cloneNode(),c=n.createElement;' +\n        'h.shivMethods&&(' +\n          // unroll the `createElement` calls\n          getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n        ');return n}'\n      )(html5, data.frag);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Shivs the given document.\n     * @memberOf html5\n     * @param {Document} ownerDocument The document to shiv.\n     * @returns {Document} The shived document.\n     */\n    function shivDocument(ownerDocument) {\n      if (!ownerDocument) {\n          ownerDocument = document;\n      }\n      var data = getExpandoData(ownerDocument);\n\n      if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n        data.hasCSS = !!addStyleSheet(ownerDocument,\n          // corrects block display not defined in IE6/7/8/9\n          'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n          // adds styling not present in IE6/7/8/9\n          'mark{background:#FF0;color:#000}' +\n          // hides non-rendered elements\n          'template{display:none}'\n        );\n      }\n      if (!supportsUnknownElements) {\n        shivMethods(ownerDocument, data);\n      }\n      return ownerDocument;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The `html5` object is exposed so that more elements can be shived and\n     * existing shiving can be detected on iframes.\n     * @type Object\n     * @example\n     *\n     * // options can be changed before the script is included\n     * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n     */\n    var html5 = {\n\n      /**\n       * An array or space separated string of node names of the elements to shiv.\n       * @memberOf html5\n       * @type Array|String\n       */\n      'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\n\n      /**\n       * current version of html5shiv\n       */\n      'version': version,\n\n      /**\n       * A flag to indicate that the HTML5 style sheet should be inserted.\n       * @memberOf html5\n       * @type Boolean\n       */\n      'shivCSS': (options.shivCSS !== false),\n\n      /**\n       * Is equal to true if a browser supports creating unknown/HTML5 elements\n       * @memberOf html5\n       * @type boolean\n       */\n      'supportsUnknownElements': supportsUnknownElements,\n\n      /**\n       * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n       * methods should be overwritten.\n       * @memberOf html5\n       * @type Boolean\n       */\n      'shivMethods': (options.shivMethods !== false),\n\n      /**\n       * A string to describe the type of `html5` object (\"default\" or \"default print\").\n       * @memberOf html5\n       * @type String\n       */\n      'type': 'default',\n\n      // shivs the document according to the specified `html5` object options\n      'shivDocument': shivDocument,\n\n      //creates a shived element\n      createElement: createElement,\n\n      //creates a shived documentFragment\n      createDocumentFragment: createDocumentFragment\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    // expose html5\n    window.html5 = html5;\n\n    // shiv the document\n    shivDocument(document);\n\n  }(this, document));\n\n\n\n  var tests = [];\n\n\n  var ModernizrProto = {\n    // The current version, dummy\n    _version: 'v3.0.0pre',\n\n    // Any settings that don't work as separate modules\n    // can go in here as configuration.\n    _config: {\n      classPrefix : '',\n      enableClasses : true,\n      usePrefixes : true\n    },\n\n    // Queue of tests\n    _q: [],\n\n    // Stub these for people who are listening\n    on: function( test, cb ) {\n      // I don't really think people should do this, but we can\n      // safe guard it a bit.\n      // -- NOTE:: this gets WAY overridden in src/addTest for\n      // actual async tests. This is in case people listen to\n      // synchronous tests. I would leave it out, but the code\n      // to *disallow* sync tests in the real version of this\n      // function is actually larger than this.\n      setTimeout(function() {\n        cb(this[test]);\n      }, 0);\n    },\n\n    addTest: function( name, fn, options ) {\n      tests.push({name : name, fn : fn, options : options });\n    },\n\n    addAsyncTest: function (fn) {\n      tests.push({name : null, fn : fn});\n    }\n  };\n\n\n\n  // Fake some of Object.create\n  // so we can force non test results\n  // to be non \"own\" properties.\n  var Modernizr = function(){};\n  Modernizr.prototype = ModernizrProto;\n\n  // Leak modernizr globally when you `require` it\n  // rather than force it here.\n  // Overwrite name so constructor name is nicer :D\n  Modernizr = new Modernizr();\n\n\n/*!\n{\n  \"name\": \"Application Cache\",\n  \"property\": \"applicationcache\",\n  \"caniuse\": \"offline-apps\",\n  \"tags\": [\"storage\", \"offline\"],\n  \"notes\": [{\n    \"name\": \"MDN documentation\",\n    \"href\": \"https://developer.mozilla.org/en/docs/HTML/Using_the_application_cache\"\n  }],\n  \"polyfills\": [\"html5gears\"]\n}\n!*/\n/* DOC\nDetects support for the Application Cache, for storing data to enable web-based applications run offline.\n\nThe API has been [heavily criticized](http://alistapart.com/article/application-cache-is-a-douchebag) and discussions are underway to address this.\n*/\n\n  Modernizr.addTest('applicationcache', 'applicationCache' in window);\n\n/*!\n{\n  \"name\": \"Geolocation API\",\n  \"property\": \"geolocation\",\n  \"caniuse\": \"geolocation\",\n  \"tags\": [\"media\"],\n  \"notes\": [{\n    \"name\": \"MDN documentation\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/WebAPI/Using_geolocation\"\n  }],\n  \"polyfills\": [\n    \"joshuabell-polyfill\",\n    \"webshims\",\n    \"geolocationshim\",\n    \"geo-location-javascript\",\n    \"geolocation-api-polyfill\"\n  ]\n}\n!*/\n/* DOC\nDetects support for the Geolocation API for users to provide their location to web applications.\n*/\n\n  // geolocation is often considered a trivial feature detect...\n  // Turns out, it's quite tricky to get right:\n  //\n  // Using !!navigator.geolocation does two things we don't want. It:\n  //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n  //   2. Disables page caching in WebKit: webk.it/43956\n  //\n  // Meanwhile, in Firefox < 8, an about:config setting could expose\n  // a false positive that would throw an exception: bugzil.la/688158\n\n  Modernizr.addTest('geolocation', 'geolocation' in navigator);\n\n/*!\n{\n  \"name\": \"History API\",\n  \"property\": \"history\",\n  \"caniuse\": \"history\",\n  \"tags\": [\"history\"],\n  \"authors\": [\"Hay Kranen\", \"Alexander Farkas\"],\n  \"notes\": [{\n    \"name\": \"W3C Spec\",\n    \"href\": \"http://www.w3.org/TR/html51/browsers.html#the-history-interface\"\n  }, {\n    \"name\": \"MDN documentation\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/window.history\"\n  }],\n  \"polyfills\": [\"historyjs\", \"html5historyapi\"]\n}\n!*/\n/* DOC\nDetects support for the History API for manipulating the browser session history.\n*/\n\n  Modernizr.addTest('history', function() {\n    // Issue #733\n    // The stock browser on Android 2.2 & 2.3, and 4.0.x returns positive on history support\n    // Unfortunately support is really buggy and there is no clean way to detect\n    // these bugs, so we fall back to a user agent sniff :(\n    var ua = navigator.userAgent;\n\n    // We only want Android 2 and 4.0, stock browser, and not Chrome which identifies\n    // itself as 'Mobile Safari' as well\n    if ((ua.indexOf('Android 2.') !== -1 ||\n        (ua.indexOf('Android 4.0') !== -1)) &&\n        ua.indexOf('Mobile Safari') !== -1 &&\n        ua.indexOf('Chrome') === -1) {\n      return false;\n    }\n\n    // Return the regular check\n    return (window.history && 'pushState' in window.history);\n  });\n\n/*!\n{\n  \"name\": \"Local Storage\",\n  \"property\": \"localstorage\",\n  \"caniuse\": \"namevalue-storage\",\n  \"tags\": [\"storage\"],\n  \"knownBugs\": [],\n  \"notes\": [],\n  \"warnings\": [],\n  \"polyfills\": [\n    \"joshuabell-polyfill\",\n    \"cupcake\",\n    \"storagepolyfill\",\n    \"amplifyjs\",\n    \"yui-cacheoffline\",\n    \"textstorage\"\n  ]\n}\n!*/\n\n  // In FF4, if disabled, window.localStorage should === null.\n\n  // Normally, we could not test that directly and need to do a\n  //   `('localStorage' in window) && ` test first because otherwise Firefox will\n  //   throw bugzil.la/365772 if cookies are disabled\n\n  // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n  // will throw the exception:\n  //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n  // Peculiarly, getItem and removeItem calls do not throw.\n\n  // Because we are forced to try/catch this, we'll go aggressive.\n\n  // Just FWIW: IE8 Compat mode supports these features completely:\n  //   www.quirksmode.org/dom/html5.html\n  // But IE8 doesn't support either with local files\n\n  Modernizr.addTest('localstorage', function() {\n    var mod = 'modernizr';\n    try {\n      localStorage.setItem(mod, mod);\n      localStorage.removeItem(mod);\n      return true;\n    } catch(e) {\n      return false;\n    }\n  });\n\n/*!\n{\n  \"name\": \"postMessage\",\n  \"property\": \"postmessage\",\n  \"caniuse\": \"x-doc-messaging\",\n  \"notes\": [{\n    \"name\": \"W3C Spec\",\n    \"href\": \"http://www.w3.org/TR/html5/comms.html#posting-messages\"\n  }],\n  \"polyfills\": [\"easyxdm\", \"postmessage-jquery\"]\n}\n!*/\n/* DOC\nDetects support for the `window.postMessage` protocol for cross-document messaging.\n*/\n\n  Modernizr.addTest('postmessage', 'postMessage' in window);\n\n/*!\n{\n  \"name\": \"Session Storage\",\n  \"property\": \"sessionstorage\",\n  \"tags\": [\"storage\"],\n  \"polyfills\": [\"joshuabell-polyfill\", \"cupcake\", \"sessionstorage\"]\n}\n!*/\n\n  // Because we are forced to try/catch this, we'll go aggressive.\n\n  // Just FWIW: IE8 Compat mode supports these features completely:\n  //   www.quirksmode.org/dom/html5.html\n  // But IE8 doesn't support either with local files\n  Modernizr.addTest('sessionstorage', function() {\n    var mod = 'modernizr';\n    try {\n      sessionStorage.setItem(mod, mod);\n      sessionStorage.removeItem(mod);\n      return true;\n    } catch(e) {\n      return false;\n    }\n  });\n\n/*!\n{\n  \"name\": \"SVG\",\n  \"property\": \"svg\",\n  \"caniuse\": \"svg\",\n  \"tags\": [\"svg\"],\n  \"authors\": [\"Erik Dahlstrom\"],\n  \"polyfills\": [\n    \"svgweb\",\n    \"raphael\",\n    \"amplesdk\",\n    \"canvg\",\n    \"svg-boilerplate\",\n    \"sie\",\n    \"dojogfx\",\n    \"fabricjs\"\n  ]\n}\n!*/\n/* DOC\nDetects support for SVG in `<embed>` or `<object>` elements.\n*/\n\n  Modernizr.addTest('svg', !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n\n/*!\n{\n  \"name\": \"Web SQL Database\",\n  \"property\": \"websqldatabase\",\n  \"caniuse\": \"sql-storage\",\n  \"tags\": [\"storage\"]\n}\n!*/\n\n  // Chrome incognito mode used to throw an exception when using openDatabase\n  // It doesn't anymore.\n  Modernizr.addTest('websqldatabase', 'openDatabase' in window);\n\n/*!\n{\n  \"name\": \"Web Workers\",\n  \"property\": \"webworkers\",\n  \"caniuse\" : \"webworkers\",\n  \"tags\": [\"performance\", \"workers\"],\n  \"notes\": [{\n    \"name\": \"W3C Reference\",\n    \"href\": \"http://www.w3.org/TR/workers/\"\n  }, {\n    \"name\": \"HTML5 Rocks article\",\n    \"href\": \"http://www.html5rocks.com/en/tutorials/workers/basics/\"\n  }, {\n    \"name\": \"MDN documentation\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Guide/Performance/Using_web_workers\"\n  }],\n  \"polyfills\": [\"fakeworker\", \"html5shims\"]\n}\n!*/\n/* DOC\nDetects support for the basic `Worker` API from the Web Workers spec. Web Workers provide a simple means for web content to run scripts in background threads.\n*/\n\n  Modernizr.addTest('webworkers', 'Worker' in window);\n\n/*!\n{\n  \"name\": \"WebSockets Support\",\n  \"property\": \"websockets\",\n  \"authors\": [\"Phread [fearphage]\", \"Mike Sherov [mikesherov]\", \"Burak Yigit Kaya [BYK]\"],\n  \"caniuse\": \"websockets\",\n  \"tags\": [\"html5\"],\n  \"warnings\": [\n    \"This test will reject any old version of WebSockets even if it is not prefixed such as in Safari 5.1\"\n  ],\n  \"notes\": [{\n    \"name\": \"CLOSING State and Spec\",\n    \"href\": \"http://www.w3.org/TR/websockets/#the-websocket-interface\"\n  }],\n  \"polyfills\": [\n    \"sockjs\",\n    \"socketio\",\n    \"kaazing-websocket-gateway\",\n    \"websocketjs\",\n    \"atmosphere\",\n    \"graceful-websocket\",\n    \"portal\",\n    \"datachannel\"\n  ]\n}\n!*/\n\n  Modernizr.addTest('websockets', 'WebSocket' in window && window.WebSocket.CLOSING === 2);\n\n\n  // List of property values to set for css tests. See ticket #21\n  var prefixes = (ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : []);\n\n  // expose these for the plugin API. Look in the source for how to join() them against your input\n  ModernizrProto._prefixes = prefixes;\n\n\n\n  /**\n   * is returns a boolean for if typeof obj is exactly type.\n   */\n  function is( obj, type ) {\n    return typeof obj === type;\n  }\n  ;\n\n  // Run through all tests and detect their support in the current UA.\n  function testRunner() {\n    var featureNames;\n    var feature;\n    var aliasIdx;\n    var result;\n    var nameIdx;\n    var featureName;\n    var featureNameSplit;\n\n    for ( var featureIdx in tests ) {\n      featureNames = [];\n      feature = tests[featureIdx];\n      // run the test, throw the return value into the Modernizr,\n      //   then based on that boolean, define an appropriate className\n      //   and push it into an array of classes we'll join later.\n      //\n      //   If there is no name, it's an 'async' test that is run,\n      //   but not directly added to the object. That should\n      //   be done with a post-run addTest call.\n      if ( feature.name ) {\n        featureNames.push(feature.name.toLowerCase());\n\n        if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n          // Add all the aliases into the names list\n          for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n            featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n          }\n        }\n      }\n\n      // Run the test, or use the raw value if it's not a function\n      result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n\n      // Set each of the names on the Modernizr object\n      for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n        featureName = featureNames[nameIdx];\n        // Support dot properties as sub tests. We don't do checking to make sure\n        // that the implied parent tests have been added. You must call them in\n        // order (either in the test, or make the parent test a dependency).\n        //\n        // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n        // hashtag famous last words\n        featureNameSplit = featureName.split('.');\n\n        if (featureNameSplit.length === 1) {\n          Modernizr[featureNameSplit[0]] = result;\n        }\n        else if (featureNameSplit.length === 2) {\n          // cast to a Boolean, if not one already\n          /* jshint -W053 */\n          if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n            Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n          }\n\n          Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n        }\n\n        classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n      }\n    }\n  }\n\n  ;\n\n  var docElement = document.documentElement;\n\n\n  // Pass in an and array of class names, e.g.:\n  //  ['no-webp', 'borderradius', ...]\n  function setClasses( classes ) {\n    var className = docElement.className;\n    var classPrefix = Modernizr._config.classPrefix || '';\n\n    // Change `no-js` to `js` (we do this regardles of the `enableClasses`\n    // option)\n    // Handle classPrefix on this too\n    var reJS = new RegExp('(^|\\\\s)'+classPrefix+'no-js(\\\\s|$)');\n    className = className.replace(reJS, '$1'+classPrefix+'js$2');\n\n    if(Modernizr._config.enableClasses) {\n      // Add the new classes\n      className += ' ' + classPrefix + classes.join(' ' + classPrefix);\n      docElement.className = className;\n    }\n\n  }\n\n  ;\n\n  // hasOwnProperty shim by kangax needed for Safari 2.0 support\n  var hasOwnProp;\n\n  (function() {\n    var _hasOwnProperty = ({}).hasOwnProperty;\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n      hasOwnProp = function (object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n  })();\n\n\n\n  // As far as I can think of, we shouldn't need or\n  // allow 'on' for non-async tests, and you can't do\n  // async tests without this 'addTest' module.\n\n  // Listeners for async or post-run tests\n  ModernizrProto._l = {};\n\n  // 'addTest' implies a test after the core runloop,\n  // So we'll add in the events\n  ModernizrProto.on = function( test, cb ) {\n    // Create the list of listeners if it doesn't exist\n    if (!this._l[test]) {\n      this._l[test] = [];\n    }\n\n    // Push this test on to the listener list\n    this._l[test].push(cb);\n\n    // If it's already been resolved, trigger it on next tick\n    if (Modernizr.hasOwnProperty(test)) {\n      // Next Tick\n      setTimeout(function() {\n        Modernizr._trigger(test, Modernizr[test]);\n      }, 0);\n    }\n  };\n\n  ModernizrProto._trigger = function( test, res ) {\n    if (!this._l[test]) {\n      return;\n    }\n\n    var cbs = this._l[test];\n\n    // Force async\n    setTimeout(function() {\n      var i, cb;\n      for (i = 0; i < cbs.length; i++) {\n        cb = cbs[i];\n        cb(res);\n      }\n    },0);\n\n    // Don't trigger these again\n    delete this._l[test];\n  };\n\n  /**\n   * addTest allows the user to define their own feature tests\n   * the result will be added onto the Modernizr object,\n   * as well as an appropriate className set on the html element\n   *\n   * @param feature - String naming the feature\n   * @param test - Function returning true if feature is supported, false if not\n   */\n  function addTest( feature, test ) {\n    if ( typeof feature == 'object' ) {\n      for ( var key in feature ) {\n        if ( hasOwnProp( feature, key ) ) {\n          addTest( key, feature[ key ] );\n        }\n      }\n    } else {\n\n      feature = feature.toLowerCase();\n      var featureNameSplit = feature.split('.');\n      var last = Modernizr[featureNameSplit[0]];\n\n      // Again, we don't check for parent test existence. Get that right, though.\n      if (featureNameSplit.length == 2) {\n        last = last[featureNameSplit[1]];\n      }\n\n      if ( typeof last != 'undefined' ) {\n        // we're going to quit if you're trying to overwrite an existing test\n        // if we were to allow it, we'd do this:\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n        //   docElement.className = docElement.className.replace( re, '' );\n        // but, no rly, stuff 'em.\n        return Modernizr;\n      }\n\n      test = typeof test == 'function' ? test() : test;\n\n      // Set the value (this is the magic, right here).\n      if (featureNameSplit.length == 1) {\n        Modernizr[featureNameSplit[0]] = test;\n      }\n      else if (featureNameSplit.length == 2) {\n        // cast to a Boolean, if not one already\n        /* jshint -W053 */\n        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n          Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n        }\n\n        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = test;\n      }\n\n      // Set a single class (either `feature` or `no-feature`)\n      setClasses([(test ? '' : 'no-') + featureNameSplit.join('-')]);\n\n      // Trigger the event\n      Modernizr._trigger(feature, test);\n    }\n\n    return Modernizr; // allow chaining.\n  }\n\n  // After all the tests are run, add self\n  // to the Modernizr prototype\n  Modernizr._q.push(function() {\n    ModernizrProto.addTest = addTest;\n  });\n\n\n\n  // Helper function for converting kebab-case to camelCase,\n  // e.g. box-sizing -> boxSizing\n  function cssToDOM( name ) {\n    return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\n      return m1 + m2.toUpperCase();\n    }).replace(/^-/, '');\n  }\n  ;\n\n  // Following spec is to expose vendor-specific style properties as:\n  //   elem.style.WebkitBorderRadius\n  // and the following would be incorrect:\n  //   elem.style.webkitBorderRadius\n\n  // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n  // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n  //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n  // More here: github.com/Modernizr/Modernizr/issues/issue/21\n  var omPrefixes = 'Webkit Moz O ms';\n\n\n  var domPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.toLowerCase().split(' ') : []);\n  ModernizrProto._domPrefixes = domPrefixes;\n\n\n  var createElement = function() {\n    return document.createElement.apply(document, arguments);\n  };\n\n/*!\n{\n  \"name\": \"Canvas\",\n  \"property\": \"canvas\",\n  \"caniuse\": \"canvas\",\n  \"tags\": [\"canvas\", \"graphics\"],\n  \"polyfills\": [\"flashcanvas\", \"excanvas\", \"slcanvas\", \"fxcanvas\"]\n}\n!*/\n/* DOC\nDetects support for the `<canvas>` element for 2D drawing.\n*/\n\n  // On the S60 and BB Storm, getContext exists, but always returns undefined\n  // so we actually have to call getContext() to verify\n  // github.com/Modernizr/Modernizr/issues/issue/97/\n  Modernizr.addTest('canvas', function() {\n    var elem = createElement('canvas');\n    return !!(elem.getContext && elem.getContext('2d'));\n  });\n\n/*!\n{\n  \"name\": \"Canvas text\",\n  \"property\": \"canvastext\",\n  \"caniuse\": \"canvas-text\",\n  \"tags\": [\"canvas\", \"graphics\"],\n  \"polyfills\": [\"canvastext\"]\n}\n!*/\n/* DOC\nDetects support for the text APIs for `<canvas>` elements.\n*/\n\n  Modernizr.addTest('canvastext',  function() {\n    if (Modernizr.canvas  === false) return false;\n    return typeof createElement('canvas').getContext('2d').fillText == 'function';\n  });\n\n/*!\n{\n  \"name\": \"CSS Gradients\",\n  \"caniuse\": \"css-gradients\",\n  \"property\": \"cssgradients\",\n  \"tags\": [\"css\"],\n  \"knownBugs\": [\"False-positives on webOS (https://github.com/Modernizr/Modernizr/issues/202)\"],\n  \"notes\": [{\n    \"name\": \"Webkit Gradient Syntax\",\n    \"href\": \"http://webkit.org/blog/175/introducing-css-gradients/\"\n  },{\n    \"name\": \"Mozilla Linear Gradient Syntax\",\n    \"href\": \"http://developer.mozilla.org/en/CSS/-moz-linear-gradient\"\n  },{\n    \"name\": \"Mozilla Radial Gradient Syntax\",\n    \"href\": \"http://developer.mozilla.org/en/CSS/-moz-radial-gradient\"\n  },{\n    \"name\": \"W3C Gradient Spec\",\n    \"href\": \"dev.w3.org/csswg/css3-images/#gradients-\"\n  }]\n}\n!*/\n\n\n  Modernizr.addTest('cssgradients', function() {\n\n    var str1 = 'background-image:';\n    var str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));';\n    var str3 = 'linear-gradient(left top,#9f9, white);';\n\n    // standard syntax             // trailing 'background-image:'\n    var css = str1 + prefixes.join(str3 + str1).slice(0, -str1.length);\n    if (Modernizr._config.usePrefixes) {\n    // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n      css += str1 + '-webkit-' + str2;\n    }\n\n    var elem = createElement('div');\n    var style = elem.style;\n    style.cssText = css;\n\n    // IE6 returns undefined so cast to string\n    return ('' + style.backgroundImage).indexOf('gradient') > -1;\n  });\n\n/*!\n{\n  \"name\": \"CSS Multiple Backgrounds\",\n  \"caniuse\": \"multibackgrounds\",\n  \"property\": \"multiplebgs\",\n  \"tags\": [\"css\"]\n}\n!*/\n\n  // Setting multiple images AND a color on the background shorthand property\n  // and then querying the style.background property value for the number of\n  // occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n  Modernizr.addTest('multiplebgs', function() {\n    var elem = createElement('div');\n    var style = elem.style;\n    style.cssText = 'background:url(https://),url(https://),red url(https://)';\n\n    // If the UA supports multiple backgrounds, there should be three occurrences\n    // of the string \"url(\" in the return value for elemStyle.background\n    return (/(url\\s*\\(.*?){3}/).test(style.background);\n  });\n\n/*!\n{\n  \"name\": \"CSS Opacity\",\n  \"caniuse\": \"css-opacity\",\n  \"property\": \"opacity\",\n  \"tags\": [\"css\"],\n  \"notes\": [\"Opacity must be be in the range of [0.0,1.0], according to the spec.\"]\n}\n!*/\n\n  // Browsers that actually have CSS Opacity implemented have done so\n  // according to spec, which means their return values are within the\n  // range of [0.0,1.0] - including the leading zero.\n\n  Modernizr.addTest('opacity', function() {\n    var elem = createElement('div');\n    var style = elem.style;\n    style.cssText = prefixes.join('opacity:.55;');\n\n    // The non-literal . in this regex is intentional:\n    // German Chrome returns this value as 0,55\n    // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n    return (/^0.55$/).test(style.opacity);\n  });\n\n/*!\n{\n  \"name\": \"CSS rgba\",\n  \"caniuse\": \"css3-colors\",\n  \"property\": \"rgba\",\n  \"tags\": [\"css\"],\n  \"notes\": [{\n    \"name\": \"CSSTricks Tutorial\",\n    \"href\": \"http://css-tricks.com/rgba-browser-support/\"\n  }]\n}\n!*/\n\n  Modernizr.addTest('rgba', function() {\n    var elem = createElement('div');\n    var style = elem.style;\n    style.cssText = 'background-color:rgba(150,255,150,.5)';\n\n    return ('' + style.backgroundColor).indexOf('rgba') > -1;\n  });\n\n/*!\n{\n  \"name\": \"Drag & Drop\",\n  \"property\": \"draganddrop\",\n  \"caniuse\": \"dragndrop\",\n  \"knownBugs\": [\"Mobile browsers like Android, iOS < 6, and Firefox OS technically support the APIs, but don't expose it to the end user, resulting in a false positive.\"],\n  \"notes\": [{\n    \"name\": \"W3C spec\",\n    \"href\": \"http://www.w3.org/TR/2010/WD-html5-20101019/dnd.html\"\n  }],\n  \"polyfills\": [\"dropfile\", \"moxie\", \"fileapi\"]\n}\n!*/\n/* DOC\nDetects support for native drag & drop of elements.\n*/\n\n  Modernizr.addTest('draganddrop', function() {\n    var div = createElement('div');\n    return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n  });\n\n/*!\n{\n  \"name\" : \"HTML5 Audio Element\",\n  \"property\": \"audio\",\n  \"tags\" : [\"html5\", \"audio\", \"media\"]\n}\n!*/\n/* DOC\nDetects the audio element\n*/\n\n  // This tests evaluates support of the audio element, as well as\n  // testing what types of content it supports.\n  //\n  // We're using the Boolean constructor here, so that we can extend the value\n  // e.g.  Modernizr.audio     // true\n  //       Modernizr.audio.ogg // 'probably'\n  //\n  // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n  //                     thx to NielsLeenheer and zcorpan\n\n  // Note: in some older browsers, \"no\" was a return value instead of empty string.\n  //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n  //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n  Modernizr.addTest('audio', function() {\n    /* jshint -W053 */\n    var elem = createElement('audio');\n    var bool = false;\n\n    try {\n      if ( bool = !!elem.canPlayType ) {\n        bool      = new Boolean(bool);\n        bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n        bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n        bool.opus  = elem.canPlayType('audio/ogg; codecs=\"opus\"') .replace(/^no$/,'');\n\n        // Mimetypes accepted:\n        //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n        //   bit.ly/iphoneoscodecs\n        bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n        bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n                     elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n      }\n    } catch(e) { }\n\n    return bool;\n  });\n\n/*!\n{\n  \"name\": \"HTML5 Video\",\n  \"property\": \"video\",\n  \"caniuse\": \"video\",\n  \"tags\": [\"html5\"],\n  \"knownBugs\": [\n    \"Without QuickTime, `Modernizr.video.h264` will be `undefined`; http://github.com/Modernizr/Modernizr/issues/546\"\n  ],\n  \"polyfills\": [\n    \"html5media\",\n    \"mediaelementjs\",\n    \"sublimevideo\",\n    \"videojs\",\n    \"leanbackplayer\",\n    \"videoforeverybody\"\n  ]\n}\n!*/\n/* DOC\nDetects support for the video element, as well as testing what types of content it supports.\n\nSubproperties are provided to describe support for `ogg`, `h264` and `webm` formats, e.g.:\n\n```javascript\nModernizr.video         // true\nModernizr.video.ogg     // 'probably'\n```\n*/\n\n  // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n  //                     thx to NielsLeenheer and zcorpan\n\n  // Note: in some older browsers, \"no\" was a return value instead of empty string.\n  //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n  //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n  Modernizr.addTest('video', function() {\n    /* jshint -W053 */\n    var elem = createElement('video');\n    var bool = false;\n\n    // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n    try {\n      if ( bool = !!elem.canPlayType ) {\n        bool = new Boolean(bool);\n        bool.ogg = elem.canPlayType('video/ogg; codecs=\"theora\"').replace(/^no$/,'');\n\n        // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n        bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"').replace(/^no$/,'');\n\n        bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n\n        bool.vp9 = elem.canPlayType('video/webm; codecs=\"vp9\"').replace(/^no$/,'');\n\n        bool.hls = elem.canPlayType('application/x-mpegURL; codecs=\"avc1.42E01E\"').replace(/^no$/,'');\n      }\n    } catch(e){}\n\n    return bool;\n  });\n\n/*!\n{\n  \"name\": \"Inline SVG\",\n  \"property\": \"inlinesvg\",\n  \"caniuse\": \"svg-html5\",\n  \"tags\": [\"svg\"],\n  \"notes\": [{\n    \"name\": \"Test page\",\n    \"href\": \"http://paulirish.com/demo/inline-svg\"\n  }],\n  \"polyfills\": [\"inline-svg-polyfill\"]\n}\n!*/\n/* DOC\nDetects support for inline SVG in HTML (not within XHTML).\n*/\n\n  Modernizr.addTest('inlinesvg', function() {\n    var div = createElement('div');\n    div.innerHTML = '<svg/>';\n    return (div.firstChild && div.firstChild.namespaceURI) == 'http://www.w3.org/2000/svg';\n  });\n\n/*!\n{\n  \"name\": \"WebGL\",\n  \"property\": \"webgl\",\n  \"caniuse\": \"webgl\",\n  \"tags\": [\"webgl\", \"graphics\"],\n  \"polyfills\": [\"jebgl\", \"webglcompat\", \"cwebgl\", \"iewebgl\"]\n}\n!*/\n\n  Modernizr.addTest('webgl', function() {\n    var canvas = createElement('canvas');\n    if ('supportsContext' in canvas) {\n      return canvas.supportsContext('webgl') || canvas.supportsContext('experimental-webgl');\n    }\n    return !!window.WebGLRenderingContext;\n  });\n\n\n  // isEventSupported determines if the given element supports the given event\n  // kangax.github.com/iseventsupported/\n  // github.com/Modernizr/Modernizr/pull/636\n  //\n  // Known incorrects:\n  //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n  //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n  var isEventSupported = (function (undefined) {\n\n    // Detect whether event support can be detected via `in`. Test on a DOM element\n    // using the \"blur\" event b/c it should always exist. bit.ly/event-detection\n    var needsFallback = !('onblur' in document.documentElement);\n\n    /**\n     * @param  {string|*}           eventName  is the name of an event to test for (e.g. \"resize\")\n     * @param  {(Object|string|*)=} element    is the element|document|window|tagName to test on\n     * @return {boolean}\n     */\n    function isEventSupportedInner( eventName, element ) {\n\n      var isSupported;\n      if ( !eventName ) { return false; }\n      if ( !element || typeof element === 'string' ) {\n        element = createElement(element || 'div');\n      }\n\n      // Testing via the `in` operator is sufficient for modern browsers and IE.\n      // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and\n      // \"resize\", whereas `in` \"catches\" those.\n      eventName = 'on' + eventName;\n      isSupported = eventName in element;\n\n      // Fallback technique for old Firefox - bit.ly/event-detection\n      if ( !isSupported && needsFallback ) {\n        if ( !element.setAttribute ) {\n          // Switch to generic element if it lacks `setAttribute`.\n          // It could be the `document`, `window`, or something else.\n          element = createElement('div');\n        }\n        if ( element.setAttribute && element.removeAttribute ) {\n          element.setAttribute(eventName, '');\n          isSupported = typeof element[eventName] === 'function';\n\n          if ( element[eventName] !== undefined ) {\n            // If property was created, \"remove it\" by setting value to `undefined`.\n            element[eventName] = undefined;\n          }\n          element.removeAttribute(eventName);\n        }\n      }\n\n      return isSupported;\n    }\n    return isEventSupportedInner;\n  })();\n\n\n\n  // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n  // Modernizr.hasEvent('gesturestart', elem)\n  var hasEvent = ModernizrProto.hasEvent = isEventSupported;\n\n/*!\n{\n  \"name\": \"Hashchange event\",\n  \"property\": \"hashchange\",\n  \"caniuse\": \"hashchange\",\n  \"tags\": [\"history\"],\n  \"notes\": [{\n    \"name\": \"MDN documentation\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/window.onhashchange\"\n  }],\n  \"polyfills\": [\n    \"jquery-hashchange\",\n    \"moo-historymanager\",\n    \"jquery-ajaxy\",\n    \"hasher\",\n    \"shistory\"\n  ]\n}\n!*/\n/* DOC\nDetects support for the `hashchange` event, fired when the current location fragment changes.\n*/\n\n  Modernizr.addTest('hashchange', function() {\n    if (hasEvent('hashchange', window) === false) {\n      return false;\n    }\n\n    // documentMode logic from YUI to filter out IE8 Compat Mode\n    //   which false positives.\n    return (document.documentMode === undefined || document.documentMode > 7);\n  });\n\n\n  /**\n   * contains returns a boolean for if substr is found within str.\n   */\n  function contains( str, substr ) {\n    return !!~('' + str).indexOf(substr);\n  }\n\n  ;\n/*!\n{\n  \"name\": \"CSS HSLA Colors\",\n  \"caniuse\": \"css3-colors\",\n  \"property\": \"hsla\",\n  \"tags\": [\"css\"],\n  \"notes\": [\"Same as rgba(), in fact, browsers re-map hsla() to rgba() internally, except IE9 who retains it as hsla\"]\n}\n!*/\n\n  Modernizr.addTest('hsla', function() {\n    var elem = createElement('div');\n    var style = elem.style;\n    style.cssText = 'background-color:hsla(120,40%,100%,.5)';\n    return contains(style.backgroundColor, 'rgba') || contains(style.backgroundColor, 'hsla');\n  });\n\n\n  var inputElem = createElement('input');\n\n\n  var inputtypes = 'search tel url email datetime date month week time datetime-local number range color'.split(' ');\n\n\n  var inputs = {};\n\n\n  var smile = ':)';\n\n/*!\n{\n  \"name\": \"Form input types\",\n  \"property\": \"inputtypes\",\n  \"caniuse\": \"forms\",\n  \"tags\": [\"forms\"],\n  \"authors\": [\"Mike Taylor\"],\n  \"polyfills\": [\n    \"jquerytools\",\n    \"webshims\",\n    \"h5f\",\n    \"webforms2\",\n    \"nwxforms\",\n    \"fdslider\",\n    \"html5slider\",\n    \"galleryhtml5forms\",\n    \"jscolor\",\n    \"html5formshim\",\n    \"jqueryformshim\",\n    \"selectedoptionsjs\",\n    \"formvalidationjs\"\n  ]\n}\n!*/\n/* DOC\nDetects support for HTML5 form input types and exposes Boolean subproperties with the results:\n\n```javascript\nModernizr.inputtypes.color\nModernizr.inputtypes.date\nModernizr.inputtypes.datetime\nModernizr.inputtypes['datetime-local']\nModernizr.inputtypes.email\nModernizr.inputtypes.month\nModernizr.inputtypes.number\nModernizr.inputtypes.range\nModernizr.inputtypes.search\nModernizr.inputtypes.tel\nModernizr.inputtypes.time\nModernizr.inputtypes.url\nModernizr.inputtypes.week\n```\n*/\n\n  // Run through HTML5's new input types to see if the UA understands any.\n  //   This is put behind the tests runloop because it doesn't return a\n  //   true/false like all the other tests; instead, it returns an object\n  //   containing each input type with its corresponding true/false value\n\n  // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n  Modernizr['inputtypes'] = (function(props) {\n    var bool;\n    var inputElemType;\n    var defaultView;\n    var len = props.length;\n\n    for ( var i = 0; i < len; i++ ) {\n\n      inputElem.setAttribute('type', inputElemType = props[i]);\n      bool = inputElem.type !== 'text';\n\n      // We first check to see if the type we give it sticks..\n      // If the type does, we feed it a textual value, which shouldn't be valid.\n      // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n      if ( bool ) {\n\n        inputElem.value         = smile;\n        inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n\n        if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\n\n          docElement.appendChild(inputElem);\n          defaultView = document.defaultView;\n\n          // Safari 2-4 allows the smiley as a value, despite making a slider\n          bool =  defaultView.getComputedStyle &&\n            defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n            // Mobile android web browser has false positive, so must\n            // check the height to see if the widget is actually there.\n            (inputElem.offsetHeight !== 0);\n\n          docElement.removeChild(inputElem);\n\n        } else if ( /^(search|tel)$/.test(inputElemType) ){\n          // Spec doesn't define any special parsing or detectable UI\n          //   behaviors so we pass these through as true\n\n          // Interestingly, opera fails the earlier test, so it doesn't\n          //  even make it here.\n\n        } else if ( /^(url|email)$/.test(inputElemType) ) {\n          // Real url and email support comes with prebaked validation.\n          bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n\n        } else {\n          // If the upgraded input compontent rejects the :) text, we got a winner\n          bool = inputElem.value != smile;\n        }\n      }\n\n      inputs[ props[i] ] = !!bool;\n    }\n    return inputs;\n  })(inputtypes);\n\n\n  var attrs = {};\n\n\n  var inputattrs = 'autocomplete autofocus list placeholder max min multiple pattern required step'.split(' ');\n\n/*!\n{\n  \"name\": \"Input attributes\",\n  \"property\": \"input\",\n  \"tags\": [\"forms\"],\n  \"authors\": [\"Mike Taylor\"],\n  \"notes\": [{\n    \"name\": \"WHATWG spec\",\n    \"href\": \"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\"\n  }]\n}\n!*/\n/* DOC\nDetects support for HTML5 `<input>` element attributes and exposes Boolean subproperties with the results:\n\n```javascript\nModernizr.input.autocomplete\nModernizr.input.autofocus\nModernizr.input.list\nModernizr.input.max\nModernizr.input.min\nModernizr.input.multiple\nModernizr.input.pattern\nModernizr.input.placeholder\nModernizr.input.required\nModernizr.input.step\n```\n*/\n\n  // Run through HTML5's new input attributes to see if the UA understands any.\n  // Mike Taylr has created a comprehensive resource for testing these attributes\n  //   when applied to all input types:\n  //   miketaylr.com/code/input-type-attr.html\n\n  // Only input placeholder is tested while textarea's placeholder is not.\n  // Currently Safari 4 and Opera 11 have support only for the input placeholder\n  // Both tests are available in feature-detects/forms-placeholder.js\n  Modernizr['input'] = (function( props ) {\n    for ( var i = 0, len = props.length; i < len; i++ ) {\n      attrs[ props[i] ] = !!(props[i] in inputElem);\n    }\n    if (attrs.list){\n      // safari false positive's on datalist: webk.it/74252\n      // see also github.com/Modernizr/Modernizr/issues/146\n      attrs.list = !!(createElement('datalist') && window.HTMLDataListElement);\n    }\n    return attrs;\n  })(inputattrs);\n\n\n  var toStringFn = ({}).toString;\n\n/*!\n{\n  \"name\": \"SVG clip paths\",\n  \"property\": \"svgclippaths\",\n  \"tags\": [\"svg\"],\n  \"notes\": [{\n    \"name\": \"Demo\",\n    \"href\": \"http://srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\"\n  }]\n}\n!*/\n/* DOC\nDetects support for clip paths in SVG (only, not on HTML content).\n\nSee [this discussion](http://github.com/Modernizr/Modernizr/issues/213) regarding applying SVG clip paths to HTML content.\n*/\n\n  Modernizr.addTest('svgclippaths', function() {\n    return !!document.createElementNS &&\n      /SVGClipPath/.test(toStringFn.call(document.createElementNS('http://www.w3.org/2000/svg', 'clipPath')));\n  });\n\n/*!\n{\n  \"name\": \"SVG SMIL animation\",\n  \"property\": \"smil\",\n  \"caniuse\": \"svg-smil\",\n  \"tags\": [\"svg\"],\n  \"notes\": [{\n  \"name\": \"W3C Synchronised Multimedia spec\",\n  \"href\": \"http://www.w3.org/AudioVideo/\"\n  }]\n}\n!*/\n\n  // SVG SMIL animation\n  Modernizr.addTest('smil', function() {\n    return !!document.createElementNS &&\n      /SVGAnimate/.test(toStringFn.call(document.createElementNS('http://www.w3.org/2000/svg', 'animate')));\n  });\n\n\n  var cssomPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.split(' ') : []);\n  ModernizrProto._cssomPrefixes = cssomPrefixes;\n\n\n  function getBody() {\n    // After page load injecting a fake body doesn't work so check if body exists\n    var body = document.body;\n\n    if(!body) {\n      // Can't use the real body create a fake one.\n      body = createElement('body');\n      body.fake = true;\n    }\n\n    return body;\n  }\n\n  ;\n\n  // Inject element with style element and some CSS rules\n  function injectElementWithStyles( rule, callback, nodes, testnames ) {\n    var mod = 'modernizr';\n    var style;\n    var ret;\n    var node;\n    var docOverflow;\n    var div = createElement('div');\n    var body = getBody();\n\n    if ( parseInt(nodes, 10) ) {\n      // In order not to give false positives we create a node for each test\n      // This also allows the method to scale for unspecified uses\n      while ( nodes-- ) {\n        node = createElement('div');\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n        div.appendChild(node);\n      }\n    }\n\n    // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n    // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n    // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n    // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n    // Documents served as xml will throw if using ­ so use xml friendly encoded version. See issue #277\n    style = ['­','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n    div.id = mod;\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n    (!body.fake ? div : body).innerHTML += style;\n    body.appendChild(div);\n    if ( body.fake ) {\n      //avoid crashing IE8, if background image is used\n      body.style.background = '';\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n      body.style.overflow = 'hidden';\n      docOverflow = docElement.style.overflow;\n      docElement.style.overflow = 'hidden';\n      docElement.appendChild(body);\n    }\n\n    ret = callback(div, rule);\n    // If this is done after page load we don't want to remove the body so check if body exists\n    if ( body.fake ) {\n      body.parentNode.removeChild(body);\n      docElement.style.overflow = docOverflow;\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n      docElement.offsetHeight;\n    } else {\n      div.parentNode.removeChild(div);\n    }\n\n    return !!ret;\n\n  }\n\n  ;\n\n  var testStyles = ModernizrProto.testStyles = injectElementWithStyles;\n\n/*!\n{\n  \"name\": \"@font-face\",\n  \"property\": \"fontface\",\n  \"authors\": [\"Diego Perini\", \"Mat Marquis\"],\n  \"tags\": [\"css\"],\n  \"knownBugs\": [\n    \"False Positive: WebOS http://github.com/Modernizr/Modernizr/issues/342\",\n    \"False Postive: WP7 http://github.com/Modernizr/Modernizr/issues/538\"\n  ],\n  \"notes\": [{\n    \"name\": \"@font-face detection routine by Diego Perini\",\n    \"href\": \"http://javascript.nwbox.com/CSSSupport/\"\n  },{\n    \"name\": \"Filament Group @font-face compatibility research\",\n    \"href\": \"https://docs.google.com/presentation/d/1n4NyG4uPRjAA8zn_pSQ_Ket0RhcWC6QlZ6LMjKeECo0/edit#slide=id.p\"\n  },{\n    \"name\": \"Filament Grunticon/@font-face device testing results\",\n    \"href\": \"https://docs.google.com/spreadsheet/ccc?key=0Ag5_yGvxpINRdHFYeUJPNnZMWUZKR2ItMEpRTXZPdUE#gid=0\"\n  },{\n    \"name\": \"CSS fonts on Android\",\n    \"href\": \"http://stackoverflow.com/questions/3200069/css-fonts-on-android\"\n  },{\n    \"name\": \"@font-face and Android\",\n    \"href\": \"http://archivist.incutio.com/viewlist/css-discuss/115960\"\n  }]\n}\n!*/\n\n  var blacklist = (function() {\n    var ua = navigator.userAgent;\n    var wkvers = ua.match( /applewebkit\\/([0-9]+)/gi ) && parseFloat( RegExp.$1 );\n    var webos = ua.match( /w(eb)?osbrowser/gi );\n    var wppre8 = ua.match( /windows phone/gi ) && ua.match( /iemobile\\/([0-9])+/gi ) && parseFloat( RegExp.$1 ) >= 9;\n    var oldandroid = wkvers < 533 && ua.match( /android/gi );\n    return webos || oldandroid || wppre8;\n  }());\n  if( blacklist ) {\n    Modernizr.addTest('fontface', false);\n  } else {\n    testStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\n      var style = document.getElementById('smodernizr');\n      var sheet = style.sheet || style.styleSheet;\n      var cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\n      var bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n      Modernizr.addTest('fontface', bool);\n    });\n  }\n;\n/*!\n{\n  \"name\": \"CSS Generated Content\",\n  \"property\": \"generatedcontent\",\n  \"tags\": [\"css\"],\n  \"warnings\": [\"Android won't return correct height for anything below 7px #738\"]\n}\n!*/\n\n  testStyles('#modernizr{font:0/0 a}#modernizr:after{content:\":)\";visibility:hidden;font:7px/1 a}', function( node ) {\n    Modernizr.addTest('generatedcontent', node.offsetHeight >= 7);\n  });\n\n\n  // Change the function's scope.\n  function fnBind(fn, that) {\n    return function() {\n      return fn.apply(that, arguments);\n    };\n  }\n\n  ;\n\n  /**\n   * testDOMProps is a generic DOM property test; if a browser supports\n   *   a certain property, it won't return undefined for it.\n   */\n  function testDOMProps( props, obj, elem ) {\n    var item;\n\n    for ( var i in props ) {\n      if ( props[i] in obj ) {\n\n        // return the property name as a string\n        if (elem === false) return props[i];\n\n        item = obj[props[i]];\n\n        // let's bind a function\n        if (is(item, 'function')) {\n          // bind to obj unless overriden\n          return fnBind(item, elem || obj);\n        }\n\n        // return the unbound function or obj or value\n        return item;\n      }\n    }\n    return false;\n  }\n\n  ;\n\n  /**\n   * Create our \"modernizr\" element that we do most feature tests on.\n   */\n  var modElem = {\n    elem : createElement('modernizr')\n  };\n\n  // Clean up this element\n  Modernizr._q.push(function() {\n    delete modElem.elem;\n  });\n\n\n\n  var mStyle = {\n    style : modElem.elem.style\n  };\n\n  // kill ref for gc, must happen before\n  // mod.elem is removed, so we unshift on to\n  // the front of the queue.\n  Modernizr._q.unshift(function() {\n    delete mStyle.style;\n  });\n\n\n\n  // Helper function for converting camelCase to kebab-case,\n  // e.g. boxSizing -> box-sizing\n  function domToCSS( name ) {\n    return name.replace(/([A-Z])/g, function(str, m1) {\n      return '-' + m1.toLowerCase();\n    }).replace(/^ms-/, '-ms-');\n  }\n  ;\n\n  // Function to allow us to use native feature detection functionality if available.\n  // Accepts a list of property names and a single value\n  // Returns `undefined` if native detection not available\n  function nativeTestProps ( props, value ) {\n    var i = props.length;\n    // Start with the JS API: http://www.w3.org/TR/css3-conditional/#the-css-interface\n    if ('CSS' in window && 'supports' in window.CSS) {\n      // Try every prefixed variant of the property\n      while (i--) {\n        if (window.CSS.supports(domToCSS(props[i]), value)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    // Otherwise fall back to at-rule (for FF 17 and Opera 12.x)\n    else if ('CSSSupportsRule' in window) {\n      // Build a condition string for every prefixed variant\n      var conditionText = [];\n      while (i--) {\n        conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n      }\n      conditionText = conditionText.join(' or ');\n      return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function( node ) {\n        return (window.getComputedStyle ?\n                getComputedStyle(node, null) :\n                node.currentStyle)['position'] == 'absolute';\n      });\n    }\n    return undefined;\n  }\n  ;\n\n  // testProps is a generic CSS / DOM property test.\n\n  // In testing support for a given CSS property, it's legit to test:\n  //    `elem.style[styleName] !== undefined`\n  // If the property is supported it will return an empty string,\n  // if unsupported it will return undefined.\n\n  // We'll take advantage of this quick test and skip setting a style\n  // on our modernizr element, but instead just testing undefined vs\n  // empty string.\n\n  // Because the testing of the CSS property names (with \"-\", as\n  // opposed to the camelCase DOM properties) is non-portable and\n  // non-standard but works in WebKit and IE (but not Gecko or Opera),\n  // we explicitly reject properties with dashes so that authors\n  // developing in WebKit or IE first don't end up with\n  // browser-specific content by accident.\n\n  function testProps( props, prefixed, value, skipValueTest ) {\n    skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\n    // Try native detect first\n    if (!is(value, 'undefined')) {\n      var result = nativeTestProps(props, value);\n      if(!is(result, 'undefined')) {\n        return result;\n      }\n    }\n\n    // Otherwise do it properly\n    var afterInit, i, prop, before;\n\n    // If we don't have a style element, that means\n    // we're running async or after the core tests,\n    // so we'll need to create our own elements to use\n    if ( !mStyle.style ) {\n      afterInit = true;\n      mStyle.modElem = createElement('modernizr');\n      mStyle.style = mStyle.modElem.style;\n    }\n\n    // Delete the objects if we\n    // we created them.\n    function cleanElems() {\n      if (afterInit) {\n        delete mStyle.style;\n        delete mStyle.modElem;\n      }\n    }\n\n    for ( i in props ) {\n      prop = props[i];\n      before = mStyle.style[prop];\n\n      if ( !contains(prop, '-') && mStyle.style[prop] !== undefined ) {\n\n        // If value to test has been passed in, do a set-and-check test.\n        // 0 (integer) is a valid property value, so check that `value` isn't\n        // undefined, rather than just checking it's truthy.\n        if (!skipValueTest && !is(value, 'undefined')) {\n\n          // Needs a try catch block because of old IE. This is slow, but will\n          // be avoided in most cases because `skipValueTest` will be used.\n          try {\n            mStyle.style[prop] = value;\n          } catch (e) {}\n\n          // If the property value has changed, we assume the value used is\n          // supported. If `value` is empty string, it'll fail here (because\n          // it hasn't changed), which matches how browsers have implemented\n          // CSS.supports()\n          if (mStyle.style[prop] != before) {\n            cleanElems();\n            return prefixed == 'pfx' ? prop : true;\n          }\n        }\n        // Otherwise just return true, or the property name if this is a\n        // `prefixed()` call\n        else {\n          cleanElems();\n          return prefixed == 'pfx' ? prop : true;\n        }\n      }\n    }\n    cleanElems();\n    return false;\n  }\n\n  ;\n\n  // Modernizr.testProp() investigates whether a given style property is recognized\n  // Note that the property names must be provided in the camelCase variant.\n  // Modernizr.testProp('pointerEvents')\n  // Also accepts optional 2nd arg, of a value to use for native feature detection, e.g.:\n  // Modernizr.testProp('pointerEvents', 'none')\n  var testProp = ModernizrProto.testProp = function( prop, value, useValue ) {\n    return testProps([prop], undefined, value, useValue);\n  };\n\n/*!\n{\n  \"name\": \"CSS textshadow\",\n  \"property\": \"textshadow\",\n  \"caniuse\": \"css-textshadow\",\n  \"tags\": [\"css\"],\n  \"knownBugs\": [\"FF3.0 will false positive on this test\"]\n}\n!*/\n\n  Modernizr.addTest('textshadow', testProp('textShadow', '1px 1px'));\n\n\n  /**\n   * testPropsAll tests a list of DOM properties we want to check against.\n   *     We specify literally ALL possible (known and/or likely) properties on\n   *     the element including the non-vendor prefixed one, for forward-\n   *     compatibility.\n   */\n  function testPropsAll( prop, prefixed, elem, value, skipValueTest ) {\n\n    var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n    props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n    // did they call .prefixed('boxSizing') or are we just testing a prop?\n    if(is(prefixed, 'string') || is(prefixed, 'undefined')) {\n      return testProps(props, prefixed, value, skipValueTest);\n\n      // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n    } else {\n      props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n      return testDOMProps(props, prefixed, elem);\n    }\n  }\n\n  // Modernizr.testAllProps() investigates whether a given style property,\n  //     or any of its vendor-prefixed variants, is recognized\n  // Note that the property names must be provided in the camelCase variant.\n  // Modernizr.testAllProps('boxSizing')\n  ModernizrProto.testAllProps = testPropsAll;\n\n\n\n  // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n  // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n  // Properties can be passed as DOM-style camelCase or CSS-style kebab-case.\n  // Return values will always be in camelCase; if you want kebab-case, use Modernizr.prefixedCSS().\n\n  // If you're trying to ascertain which transition end event to bind to, you might do something like...\n  //\n  //     var transEndEventNames = {\n  //         'WebkitTransition' : 'webkitTransitionEnd',// Saf 6, Android Browser\n  //         'MozTransition'    : 'transitionend',      // only for FF < 15\n  //         'transition'       : 'transitionend'       // IE10, Opera, Chrome, FF 15+, Saf 7+\n  //     },\n  //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n  var prefixed = ModernizrProto.prefixed = function( prop, obj, elem ) {\n    // Convert kebab-case to camelCase\n    if (prop.indexOf('-') != -1) {\n      prop = cssToDOM(prop);\n    }\n    if (!obj) {\n      return testPropsAll(prop, 'pfx');\n    } else {\n      // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n      return testPropsAll(prop, obj, elem);\n    }\n  };\n\n\n/*!\n{\n  \"name\": \"IndexedDB\",\n  \"property\": \"indexeddb\",\n  \"caniuse\": \"indexeddb\",\n  \"tags\": [\"storage\"],\n  \"polyfills\": [\"indexeddb\"]\n}\n!*/\n/* DOC\nDetects support for the IndexedDB client-side storage API (final spec).\n*/\n\n  // Vendors had inconsistent prefixing with the experimental Indexed DB:\n  // - Webkit's implementation is accessible through webkitIndexedDB\n  // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n  // For speed, we don't test the legacy (and beta-only) indexedDB\n\n  var indexeddb = prefixed('indexedDB', window);\n  Modernizr.addTest('indexeddb', !!indexeddb);\n\n  if (!!indexeddb) {\n    Modernizr.addTest('indexeddb.deletedatabase', 'deleteDatabase' in indexeddb);\n  }\n;\n\n  /**\n   * testAllProps determines whether a given CSS property, in some prefixed\n   * form, is supported by the browser. It can optionally be given a value; in\n   * which case testAllProps will only return true if the browser supports that\n   * value for the named property; this latter case will use native detection\n   * (via window.CSS.supports) if available. A boolean can be passed as a 3rd\n   * parameter to skip the value check when native detection isn't available,\n   * to improve performance when simply testing for support of a property.\n   *\n   * @param prop - String naming the property to test\n   * @param value - [optional] String of the value to test\n   * @param skipValueTest - [optional] Whether to skip testing that the value\n   *                        is supported when using non-native detection\n   *                        (default: false)\n   */\n  function testAllProps (prop, value, skipValueTest) {\n    return testPropsAll(prop, undefined, undefined, value, skipValueTest);\n  }\n  ModernizrProto.testAllProps = testAllProps;\n\n/*!\n{\n  \"name\": \"Border Radius\",\n  \"property\": \"borderradius\",\n  \"caniuse\": \"border-radius\",\n  \"polyfills\": [\"css3pie\"],\n  \"tags\": [\"css\"],\n  \"notes\": [{\n    \"name\": \"Comprehensive Compat Chart\",\n    \"href\": \"http://muddledramblings.com/table-of-css3-border-radius-compliance\"\n  }]\n}\n!*/\n\n  Modernizr.addTest('borderradius', testAllProps('borderRadius', '0px', true));\n\n/*!\n{\n  \"name\": \"Border Image\",\n  \"property\": \"borderimage\",\n  \"caniuse\": \"border-image\",\n  \"polyfills\": [\"css3pie\"],\n   \"knownBugs\": [\"Android < 2.0 is true, but has a broken implementation\"],\n  \"tags\": [\"css\"]\n}\n!*/\n\n  Modernizr.addTest('borderimage', testAllProps('borderImage', 'url() 1', true));\n\n/*!\n{\n  \"name\": \"Background Size\",\n  \"property\": \"backgroundsize\",\n  \"tags\": [\"css\"],\n  \"knownBugs\": [\"This will false positive in Opera Mini - http://github.com/Modernizr/Modernizr/issues/396\"],\n  \"notes\": [{\n    \"name\": \"Related Issue\",\n    \"href\": \"http://github.com/Modernizr/Modernizr/issues/396\"\n  }]\n}\n!*/\n\n  Modernizr.addTest('backgroundsize', testAllProps('backgroundSize', '100%', true));\n\n/*!\n{\n  \"name\": \"Box Shadow\",\n  \"property\": \"boxshadow\",\n  \"caniuse\": \"css-boxshadow\",\n  \"tags\": [\"css\"],\n  \"knownBugs\": [\n    \"WebOS false positives on this test.\",\n    \"The Kindle Silk browser false positives\"\n  ]\n}\n!*/\n\n  Modernizr.addTest('boxshadow', testAllProps('boxShadow', '1px 1px', true));\n\n/*!\n{\n  \"name\": \"CSS Animations\",\n  \"property\": \"cssanimations\",\n  \"caniuse\": \"css-animation\",\n  \"polyfills\": [\"transformie\", \"csssandpaper\"],\n  \"tags\": [\"css\"],\n  \"warnings\": [\"Android < 4 will pass this test, but can only animate a single property at a time\"],\n  \"notes\": [{\n    \"name\" : \"Article: 'Dispelling the Android CSS animation myths'\",\n    \"href\": \"http://goo.gl/CHVJm\"\n  }]\n}\n!*/\n/* DOC\nDetects wether or not elements can be animated using CSS\n*/\n\n  Modernizr.addTest('cssanimations', testAllProps('animationName', 'a', true));\n\n/*!\n{\n  \"name\": \"CSS Columns\",\n  \"property\": \"csscolumns\",\n  \"caniuse\": \"multicolumn\",\n  \"polyfills\": [\"css3multicolumnjs\"],\n  \"tags\": [\"css\"]\n}\n!*/\n\n\n  (function() {\n\n    /* jshint -W053 */\n    Modernizr.addTest('csscolumns', function(){\n      var bool = false;\n      var test = testAllProps('columnCount');\n      try {\n        if ( bool = !!test ) {\n          bool = new Boolean(bool);\n        }\n      } catch(e){}\n\n      return bool;\n    });\n\n    var props = ['Width', 'Span', 'Fill', 'Gap', 'Rule', 'RuleColor', 'RuleStyle', 'RuleWidth', 'BreakBefore', 'BreakAfter', 'BreakInside'];\n    var name, test;\n\n    for (var i = 0; i < props.length; i++) {\n      name = props[i].toLowerCase();\n      test = testAllProps('column' + props[i]);\n\n      // break-before, break-after & break-inside are not \"column\"-prefixed in spec\n      if (name === 'breakbefore' || name === 'breakafter' || name == 'breakinside') {\n        test = test || testAllProps(props[i]);\n      }\n\n      Modernizr.addTest('csscolumns.' + name, test);\n    }\n\n\n  })();\n\n\n/*!\n{\n  \"name\": \"CSS Reflections\",\n  \"caniuse\": \"css-reflections\",\n  \"property\": \"cssreflections\",\n  \"tags\": [\"css\"]\n}\n!*/\n\n  Modernizr.addTest('cssreflections', testAllProps('boxReflect', 'above', true));\n\n/*!\n{\n  \"name\": \"CSS Transforms\",\n  \"property\": \"csstransforms\",\n  \"caniuse\": \"transforms2d\",\n  \"tags\": [\"css\"]\n}\n!*/\n\n  Modernizr.addTest('csstransforms', testAllProps('transform', 'scale(1)', true));\n\n/*!\n{\n  \"name\": \"CSS Transforms 3D\",\n  \"property\": \"csstransforms3d\",\n  \"caniuse\": \"transforms3d\",\n  \"tags\": [\"css\"],\n  \"warnings\": [\n    \"Chrome may occassionally fail this test on some systems; more info: https://code.google.com/p/chromium/issues/detail?id=129004\"\n  ]\n}\n!*/\n\n  Modernizr.addTest('csstransforms3d', function() {\n    var ret = !!testAllProps('perspective', '1px', true);\n    var usePrefix = Modernizr._config.usePrefixes;\n\n    // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n    //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n    //   some conditions. As a result, Webkit typically recognizes the syntax but\n    //   will sometimes throw a false positive, thus we must do a more thorough check:\n    if ( ret && (!usePrefix || 'webkitPerspective' in docElement.style )) {\n\n      // Webkit allows this media query to succeed only if the feature is enabled.\n      // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n      // If loaded inside the body tag and the test element inherits any padding, margin or borders it will fail #740\n      var mq = '@media (transform-3d)';\n      if (usePrefix ) mq += ',(-webkit-transform-3d)';\n      mq += '{#modernizr{left:9px;position:absolute;height:5px;margin:0;padding:0;border:0}}';\n\n      testStyles(mq, function( elem ) {\n        ret = elem.offsetLeft === 9 && elem.offsetHeight === 5;\n      });\n    }\n\n    return ret;\n  });\n\n/*!\n{\n  \"name\": \"CSS Transitions\",\n  \"property\": \"csstransitions\",\n  \"caniuse\": \"css-transitions\",\n  \"tags\": [\"css\"]\n}\n!*/\n\n  Modernizr.addTest('csstransitions', testAllProps('transition', 'all', true));\n\n/*!\n{\n  \"name\": \"Flexbox\",\n  \"property\": \"flexbox\",\n  \"caniuse\": \"flexbox\",\n  \"tags\": [\"css\"],\n  \"notes\": [{\n    \"name\": \"The _new_ flexbox\",\n    \"href\": \"http://dev.w3.org/csswg/css3-flexbox\"\n  }],\n  \"warnings\": [\n    \"A `true` result for this detect does not imply that the `flex-wrap` property is supported; see the `flexwrap` detect.\"\n  ]\n}\n!*/\n/* DOC\nDetects support for the Flexible Box Layout model, a.k.a. Flexbox, which allows easy manipulation of layout order and sizing within a container.\n*/\n\n  Modernizr.addTest('flexbox', testAllProps('flexBasis', '1px', true));\n\n/*!\n{\n  \"name\": \"Flexbox (legacy)\",\n  \"property\": \"flexboxlegacy\",\n  \"tags\": [\"css\"],\n  \"polyfills\": [\"flexie\"],\n  \"notes\": [{\n    \"name\": \"The _old_ flexbox\",\n    \"href\": \"http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/\"\n  }]\n}\n!*/\n\n  Modernizr.addTest('flexboxlegacy', testAllProps('boxDirection', 'reverse', true));\n\n\n  // Run each test\n  testRunner();\n\n  // Remove the \"no-js\" class if it exists\n  setClasses(classes);\n\n  delete ModernizrProto.addTest;\n  delete ModernizrProto.addAsyncTest;\n\n  // Run the things that are supposed to run after the tests\n  for (var i = 0; i < Modernizr._q.length; i++) {\n    Modernizr._q[i]();\n  }\n\n  // Leak Modernizr namespace\n  window.Modernizr = Modernizr;\n\n\n\n})(this, document);"]}